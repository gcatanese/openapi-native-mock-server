openapi: 3.1.0
info:
  contact:
    name: Adyen Developer Experience team
    url: https://github.com/Adyen/adyen-openapi
  description: ">Versions 1 and 2 of the Transfers API are deprecated. If you are\
    \ just starting your implementation, use the latest version.\n\nThe Transfers\
    \ API provides endpoints that you can use to transfer funds, whether when paying\
    \ out to a transfer instrument for [marketplaces](https://docs.adyen.com/marketplaces/payout-to-users/on-demand-payouts)\
    \ or [platforms](https://docs.adyen.com/platforms/payout-to-users/on-demand-payouts),\
    \ [sending funds to third parties](https://docs.adyen.com/platforms/business-accounts/send-receive-funds)\
    \ for users with business bank accounts, or to [request a payout for a grant offer](https://docs.adyen.com/platforms/capital).\
    \ The API also supports use cases for [getting transactions for business bank\
    \ accounts](https://docs.adyen.com/platforms/business-accounts/transactions-api)\
    \ and getting [outstanding balances](https://docs.adyen.com/platforms/capital#get-balances)\
    \ for one or more grants on your platform. \n\n## Authentication\nEach request\
    \ to the Transfers API must be signed with an API key. Generate an API key in\
    \ your Customer Area if you have a [platform setup](https://docs.adyen.com/platforms/manage-access/api-credentials-web-service/#generate-api-key)\
    \ or [marketplace setup](https://docs.adyen.com/marketplaces/manage-access/api-credentials-web-service/#generate-api-key).\n\
    \nIf you have an Adyen Issuing integration, [generate an API key](https://docs.adyen.com/issuing/manage-access/api-credentials-web-service/#generate-api-key)\
    \ in your Balance Platform Customer Area.\n\nTo connect to the API, add an `X-API-Key`\
    \ header with the API key as the value, for example:\n\n ```\ncurl\n-H \"Content-Type:\
    \ application/json\" \\\n-H \"X-API-Key: YOUR_API_KEY\" \\\n...\n```\n\n## Roles\
    \ and permissions\nTo use the Transfers API, you need an additional role for your\
    \ API credential. Transfers must also be enabled for the source balance account.\
    \ Your Adyen contact will set up the roles and permissions for you.\n## Versioning\n\
    The Transfers API supports [versioning](https://docs.adyen.com/development-resources/versioning)\
    \ using a version suffix in the endpoint URL. This suffix has the following format:\
    \ \"vXX\", where XX is the version number.\n\nFor example:\n```\nhttps://balanceplatform-api-test.adyen.com/btl/v4/transfers\n\
    ```\n## Going live\nWhen going live, generate an API key in your [live Customer\
    \ Area](https://ca-live.adyen.com/ca/) if you have an Adyen for Platforms integration\
    \ or [live Balance Platform Customer Area](https://balanceplatform-live.adyen.com/balanceplatform/)\
    \ if you have an Adyen Issuing integration. You can then use the API key to send\
    \ requests to `https://balanceplatform-api-live.adyen.com/btl/v4`.\n\n"
  termsOfService: https://www.adyen.com/legal/terms-and-conditions
  title: Transfers API
  version: "4"
  x-publicVersion: true
servers:
  - url: https://balanceplatform-api-test.adyen.com/btl/v4
tags:
  - name: Transfers
  - name: Transactions
  - name: Capital
paths:
  /grants:
    get:
      deprecated: true
      description: Returns a list of grants with status and outstanding balances.
      operationId: get-grants
      parameters:
        - description: The counterparty account holder id.
          explode: true
          in: query
          name: counterpartyAccountHolderId
          required: false
          schema:
            type: string
          style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CapitalGrants'
          description: OK - the request has succeeded.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestServiceError'
          description: Bad Request - a problem reading or understanding the request.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestServiceError'
          description: Unauthorized - authentication required.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestServiceError'
          description: Forbidden - insufficient permissions to process the request.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestServiceError'
          description: Not Found - the payment was not found
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestServiceError'
          description: Unprocessable Entity - a request validation error.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestServiceError'
          description: Internal Server Error - the server could not process the request.
      security:
        - clientKey: []
        - BasicAuth: []
        - ApiKeyAuth: []
      summary: Get a capital account
      tags:
        - Capital
      x-deprecatedInVersion: "4"
      x-deprecatedMessage: "Use the `/grants` endpoint from the [Capital API](https://docs.adyen.com/api-explorer/capital/latest/get/grants)\
        \ instead."
      x-addedInVersion: "3"
      x-sortIndex: 2
      x-methodName: getCapitalAccount
    post:
      deprecated: true
      description: Requests the payout of the selected grant offer.
      operationId: post-grants
      parameters:
        - $ref: '#/components/parameters/Idempotency-Key'
      requestBody:
        content:
          application/json:
            examples:
              requestGrant:
                $ref: '#/components/examples/post-grants-requestGrant'
            schema:
              $ref: '#/components/schemas/CapitalGrantInfo'
      responses:
        "200":
          content:
            application/json:
              examples:
                requestGrant:
                  $ref: '#/components/examples/post-grants-requestGrant-200'
              schema:
                $ref: '#/components/schemas/CapitalGrant'
          description: OK - the request has succeeded.
          headers:
            Idempotency-Key:
              $ref: '#/components/headers/Idempotency-Key'
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestServiceError'
          description: Bad Request - a problem reading or understanding the request.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestServiceError'
          description: Unauthorized - authentication required.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestServiceError'
          description: Forbidden - insufficient permissions to process the request.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestServiceError'
          description: Not Found - the payment was not found
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestServiceError'
          description: Unprocessable Entity - a request validation error.
          headers:
            Idempotency-Key:
              $ref: '#/components/headers/Idempotency-Key'
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestServiceError'
          description: Internal Server Error - the server could not process the request.
      security:
        - clientKey: []
        - BasicAuth: []
        - ApiKeyAuth: []
      summary: Request a grant payout
      tags:
        - Capital
      x-deprecatedInVersion: "4"
      x-deprecatedMessage: "Use the `/grants` endpoint from the [Capital API](https://docs.adyen.com/api-explorer/capital/latest/post/grants)\
        \ instead."
      x-addedInVersion: "3"
      x-sortIndex: 1
      x-methodName: requestGrantPayout
  /grants/{id}:
    get:
      deprecated: true
      description: Returns the details of a capital account specified in the path.
      operationId: get-grants-id
      parameters:
        - description: The unique identifier of the grant.
          explode: false
          in: path
          name: id
          required: true
          schema:
            type: string
          style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CapitalGrant'
          description: OK - the request has succeeded.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestServiceError'
          description: Bad Request - a problem reading or understanding the request.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestServiceError'
          description: Unauthorized - authentication required.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestServiceError'
          description: Forbidden - insufficient permissions to process the request.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestServiceError'
          description: Not Found - the payment was not found
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestServiceError'
          description: Unprocessable Entity - a request validation error.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestServiceError'
          description: Internal Server Error - the server could not process the request.
      security:
        - clientKey: []
        - BasicAuth: []
        - ApiKeyAuth: []
      summary: Get grant reference details
      tags:
        - Capital
      x-deprecatedInVersion: "4"
      x-deprecatedMessage: "Use the `/grants/{grantId}` endpoint from the [Capital\
        \ API](https://docs.adyen.com/api-explorer/capital/latest/get/grants/(grantId))\
        \ instead."
      x-addedInVersion: "3"
      x-sortIndex: 3
      x-methodName: getGrantReferenceDetails
  /transactions:
    get:
      description: |+
        >Versions 1 and 2 of the Transfers API are deprecated. If you are just starting your implementation, use the latest version.

        Returns all the transactions related to a balance account, account holder, or balance platform.

        When making this request, you must include at least one of the following:
        - `balanceAccountId`
        - `accountHolderId`
        - `balancePlatform`.

        This endpoint supports cursor-based pagination. The response returns the first page of results, and returns links to the next and previous pages when applicable. You can use the links to page through the results.

      operationId: get-transactions
      parameters:
        - description: |-
            The unique identifier of the [balance platform](https://docs.adyen.com/api-explorer/#/balanceplatform/latest/get/balancePlatforms/{id}__queryParam_id).
            
            Required if you don't provide a `balanceAccountId` or `accountHolderId`.
          explode: true
          in: query
          name: balancePlatform
          required: false
          schema:
            type: string
          style: form
        - description: |-
            The unique identifier of the [payment instrument](https://docs.adyen.com/api-explorer/balanceplatform/latest/get/paymentInstruments/_id_).
            
            To use this parameter, you must also provide a `balanceAccountId`, `accountHolderId`, or `balancePlatform`.
            
            The `paymentInstrumentId` must be related to the `balanceAccountId` or `accountHolderId` that you provide.
          explode: true
          in: query
          name: paymentInstrumentId
          required: false
          schema:
            type: string
          style: form
        - description: |-
            The unique identifier of the [account holder](https://docs.adyen.com/api-explorer/#/balanceplatform/latest/get/accountHolders/{id}__queryParam_id).
            
            Required if you don't provide a `balanceAccountId` or `balancePlatform`.
            
            If you provide a `balanceAccountId`, the `accountHolderId` must be related to the `balanceAccountId`.
          explode: true
          in: query
          name: accountHolderId
          required: false
          schema:
            type: string
          style: form
        - description: |-
            The unique identifier of the [balance account](https://docs.adyen.com/api-explorer/#/balanceplatform/latest/get/balanceAccounts/{id}__queryParam_id).
            
            Required if you don't provide an `accountHolderId` or `balancePlatform`.
            
            If you provide an `accountHolderId`, the `balanceAccountId` must be related to the `accountHolderId`.
          explode: true
          in: query
          name: balanceAccountId
          required: false
          schema:
            type: string
          style: form
        - description: The `cursor` returned in the links of the previous response.
          explode: true
          in: query
          name: cursor
          required: false
          schema:
            type: string
          style: form
        - description: "Only include transactions that have been created on or after\
          \ this point in time. The value must be in ISO 8601 format. For example,\
          \ **2021-05-30T15:07:40Z**."
          explode: true
          in: query
          name: createdSince
          required: true
          schema:
            format: date-time
            type: string
          style: form
        - description: "Only include transactions that have been created on or before\
          \ this point in time. The value must be in ISO 8601 format. For example,\
          \ **2021-05-30T15:07:40Z**."
          explode: true
          in: query
          name: createdUntil
          required: true
          schema:
            format: date-time
            type: string
          style: form
        - description: "The number of items returned per page, maximum of 100 items.\
          \ By default, the response returns 10 items per page."
          explode: true
          in: query
          name: limit
          required: false
          schema:
            format: int32
            type: integer
          style: form
      responses:
        "200":
          content:
            application/json:
              examples:
                success:
                  $ref: '#/components/examples/get-transactions-success-200'
              schema:
                $ref: '#/components/schemas/TransactionSearchResponse'
          description: OK - the request has succeeded.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestServiceError'
          description: Unauthorized - authentication required.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestServiceError'
          description: Forbidden - insufficient permissions to process the request.
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestServiceError'
          description: Unprocessable Entity - a request validation error.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestServiceError'
          description: Internal Server Error - the server could not process the request.
      security:
        - clientKey: []
        - BasicAuth: []
        - ApiKeyAuth: []
      summary: Get all transactions
      tags:
        - Transactions
      x-addedInVersion: "1"
      x-sortIndex: 1
      x-methodName: getAllTransactions
  /transactions/{id}:
    get:
      description: |-
        >Versions 1 and 2 of the Transfers API are deprecated. If you are just starting your implementation, use the latest version.

        Returns a transaction.
      operationId: get-transactions-id
      parameters:
        - description: The unique identifier of the transaction.
          explode: false
          in: path
          name: id
          required: true
          schema:
            type: string
          style: simple
      responses:
        "200":
          content:
            application/json:
              examples:
                success:
                  $ref: '#/components/examples/get-transactions-id-success-200'
              schema:
                $ref: '#/components/schemas/Transaction'
          description: OK - the request has succeeded.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestServiceError'
          description: Unauthorized - authentication required.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestServiceError'
          description: Forbidden - insufficient permissions to process the request.
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestServiceError'
          description: Unprocessable Entity - a request validation error.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestServiceError'
          description: Internal Server Error - the server could not process the request.
      security:
        - clientKey: []
        - BasicAuth: []
        - ApiKeyAuth: []
      summary: Get a transaction
      tags:
        - Transactions
      x-addedInVersion: "1"
      x-sortIndex: 2
      x-methodName: getTransaction
  /transfers:
    get:
      description: |+
        Returns all the transfers related to a balance account, account holder, or balance platform.

        When making this request, you must include at least one of the following:
        - `balanceAccountId`
        - `accountHolderId`
        - `balancePlatform`.

        This endpoint supports cursor-based pagination. The response returns the first page of results, and returns links to the next and previous pages when applicable. You can use the links to page through the results.

      operationId: get-transfers
      parameters:
        - description: |-
            The unique identifier of the [balance platform](https://docs.adyen.com/api-explorer/#/balanceplatform/latest/get/balancePlatforms/{id}__queryParam_id).
            
            Required if you don't provide a `balanceAccountId` or `accountHolderId`.
          explode: true
          in: query
          name: balancePlatform
          required: false
          schema:
            type: string
          style: form
        - description: |-
            The unique identifier of the [account holder](https://docs.adyen.com/api-explorer/#/balanceplatform/latest/get/accountHolders/{id}__queryParam_id).
            
            Required if you don't provide a `balanceAccountId` or `balancePlatform`.
            
            If you provide a `balanceAccountId`, the `accountHolderId` must be related to the `balanceAccountId`.
          explode: true
          in: query
          name: accountHolderId
          required: false
          schema:
            type: string
          style: form
        - description: |-
            The unique identifier of the [balance account](https://docs.adyen.com/api-explorer/#/balanceplatform/latest/get/balanceAccounts/{id}__queryParam_id).
            
            Required if you don't provide an `accountHolderId` or `balancePlatform`.
            
            If you provide an `accountHolderId`, the `balanceAccountId` must be related to the `accountHolderId`.
          explode: true
          in: query
          name: balanceAccountId
          required: false
          schema:
            type: string
          style: form
        - description: |-
            The unique identifier of the [payment instrument](https://docs.adyen.com/api-explorer/balanceplatform/latest/get/paymentInstruments/_id_).
            
            To use this parameter, you must also provide a `balanceAccountId`, `accountHolderId`, or `balancePlatform`.
            
            The `paymentInstrumentId` must be related to the `balanceAccountId` or `accountHolderId` that you provide.
          explode: true
          in: query
          name: paymentInstrumentId
          required: false
          schema:
            type: string
          style: form
        - description: "The reference you provided in the POST [/transfers](https://docs.adyen.com/api-explorer/transfers/latest/post/transfers)\
          \ request"
          explode: true
          in: query
          name: reference
          required: false
          schema:
            type: string
          style: form
        - description: |-
            The type of transfer.
            
            Possible values:
            
             - **bank**: Transfer to a [transfer instrument](https://docs.adyen.com/api-explorer/#/legalentity/latest/post/transferInstruments__resParam_id) or a bank account.
            
            - **internal**: Transfer to another [balance account](https://docs.adyen.com/api-explorer/#/balanceplatform/latest/post/balanceAccounts__resParam_id) within your platform.
            
            - **issuedCard**: Transfer initiated by a Adyen-issued card.
            
            - **platformPayment**: Fund movements related to payments that are acquired for your users.
          explode: true
          in: query
          name: category
          required: false
          schema:
            enum:
              - bank
              - card
              - grants
              - internal
              - issuedCard
              - migration
              - platformPayment
              - topUp
              - upgrade
            type: string
            x-enum:
              - value: topUp
              - value: platformPayment
              - value: internal
              - value: bank
              - value: issuedCard
              - value: grants
              - value: migration
              - value: card
              - value: upgrade
          style: form
        - description: "Only include transfers that have been created on or after this\
          \ point in time. The value must be in ISO 8601 format and not earlier than\
          \ 6 months before the `createdUntil` date. For example, **2021-05-30T15:07:40Z**."
          explode: true
          in: query
          name: createdSince
          required: true
          schema:
            format: date-time
            type: string
          style: form
        - description: "Only include transfers that have been created on or before this\
          \ point in time. The value must be in ISO 8601 format and not later than\
          \ 6 months after the `createdSince` date. For example, **2021-05-30T15:07:40Z**."
          explode: true
          in: query
          name: createdUntil
          required: true
          schema:
            format: date-time
            type: string
          style: form
        - description: The `cursor` returned in the links of the previous response.
          explode: true
          in: query
          name: cursor
          required: false
          schema:
            type: string
          style: form
        - description: "The number of items returned per page, maximum of 100 items.\
          \ By default, the response returns 10 items per page."
          explode: true
          in: query
          name: limit
          required: false
          schema:
            format: int32
            type: integer
          style: form
      responses:
        "200":
          content:
            application/json:
              examples:
                success:
                  $ref: '#/components/examples/get-transfers-success-200'
              schema:
                $ref: '#/components/schemas/FindTransfersResponse'
          description: OK - the request has succeeded.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TransferServiceRestServiceError'
          description: Unauthorized - authentication required.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TransferServiceRestServiceError'
          description: Forbidden - insufficient permissions to process the request.
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TransferServiceRestServiceError'
          description: Unprocessable Entity - a request validation error.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TransferServiceRestServiceError'
          description: Internal Server Error - the server could not process the request.
      security:
        - clientKey: []
        - BasicAuth: []
        - ApiKeyAuth: []
      summary: Get all transfers
      tags:
        - Transfers
      x-addedInVersion: "4"
      x-sortIndex: 5
      x-methodName: getAllTransfers
    post:
      description: |-
        >Versions 1 and 2 of the Transfers API are deprecated. If you are just starting your implementation, use the latest version.

        Starts a request to transfer funds to:
        - [Balance accounts](https://docs.adyen.com/api-explorer/#/balanceplatform/latest/post/balanceAccounts)
        - [Transfer instruments](https://docs.adyen.com/api-explorer/#/legalentity/latest/post/transferInstruments)
        - [Third-party bank accounts](https://docs.adyen.com/payouts/payout-service/pay-out-to-bank-accounts)
        - [Third-party cards](https://docs.adyen.com/payouts/payout-service/pay-out-to-cards)

        Adyen sends the outcome of the transfer request through webhooks.

        To use this endpoint:
        - Your API credential must have the **TransferService Webservice Initiate** [role](https://docs.adyen.com/platforms/manage-access/webservice-roles/?tab=transfers_3).
        - The account holder must have the required [capabilities](https://docs.adyen.com/platforms/verification-overview/capabilities).

        Reach out to your Adyen contact to set up these permissions.
      operationId: post-transfers
      parameters:
        - $ref: '#/components/parameters/Idempotency-Key'
        - description: Header for authenticating through SCA
          example: SCA realm="Transfer" auth-param1="eyJjaGFsbGVuZ2UiOiJiVlV6ZW5wek0waFNl..."
          explode: false
          in: header
          name: WWW-Authenticate
          required: false
          schema:
            type: string
          style: simple
      requestBody:
        content:
          application/json:
            examples:
              payout-cross-border:
                $ref: '#/components/examples/post-transfers-payout-cross-border'
              payout-local-transfer-sepa:
                $ref: '#/components/examples/post-transfers-payout-local-transfer-sepa'
              payout-local-transfer-us:
                $ref: '#/components/examples/post-transfers-payout-local-transfer-us'
              payout-to-balance-account:
                $ref: '#/components/examples/post-transfers-payout-to-balance-account'
              payout-to-transfer-instrument:
                $ref: '#/components/examples/post-transfers-payout-to-transfer-instrument'
            schema:
              $ref: '#/components/schemas/TransferInfo'
      responses:
        "202":
          content:
            application/json:
              examples:
                payout-cross-border:
                  $ref: '#/components/examples/post-transfers-payout-cross-border-202'
                payout-local-transfer-sepa:
                  $ref: '#/components/examples/post-transfers-payout-local-transfer-sepa-202'
                payout-local-transfer-us:
                  $ref: '#/components/examples/post-transfers-payout-local-transfer-us-202'
                payout-to-balance-account:
                  $ref: '#/components/examples/post-transfers-payout-to-balance-account-202'
                payout-to-transfer-instrument:
                  $ref: '#/components/examples/post-transfers-payout-to-transfer-instrument-202'
              schema:
                $ref: '#/components/schemas/Transfer'
          description: "Accepted - the request has been accepted for processing, but\
            \ the processing has not been completed."
          headers:
            Idempotency-Key:
              $ref: '#/components/headers/Idempotency-Key'
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
          description: Unauthorized - authentication required.
          headers:
            auth-param1:
              $ref: '#/components/headers/auth-param1'
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TransferServiceRestServiceError'
          description: Forbidden - insufficient permissions to process the request.
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TransferServiceRestServiceError'
          description: Unprocessable Entity - a request validation error.
          headers:
            Idempotency-Key:
              $ref: '#/components/headers/Idempotency-Key'
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TransferServiceRestServiceError'
          description: Internal Server Error - the server could not process the request.
      security:
        - clientKey: []
        - BasicAuth: []
        - ApiKeyAuth: []
      summary: Transfer funds
      tags:
        - Transfers
      x-addedInVersion: "2"
      x-sortIndex: 1
      x-methodName: transferFunds
  /transfers/approve:
    post:
      description: |-
        Initiates the approval of a list of transfers that triggered an additional [review](https://docs.adyen.com/api-explorer/transfers/latest/post/transfers#request-review). Adyen sends the outcome of the approval request through webhooks.

        To use this endpoint:
        - Your API credential must have the **TransferService Approve** [role](https://docs.adyen.com/platforms/manage-access/webservice-roles/?tab=transfers_3).
        - The account holder must have the required [capabilities](https://docs.adyen.com/platforms/verification-overview/capabilities).

        Reach out to your Adyen contact to set up these permissions.
      operationId: post-transfers-approve
      parameters:
        - $ref: '#/components/parameters/Idempotency-Key'
        - description: Header for authenticating through SCA
          example: SCA realm="ApproveTransfers" auth-param1="eyJjaGFsbGVuZ2UiOiJiVlV6ZW5wek0waFNl..."
          explode: false
          in: header
          name: WWW-Authenticate
          required: false
          schema:
            type: string
          style: simple
      requestBody:
        content:
          application/json:
            examples:
              transfers-approve:
                $ref: '#/components/examples/post-transfers-approve-transfers-approve'
            schema:
              $ref: '#/components/schemas/ApproveTransfersRequest'
      responses:
        "200":
          content:
            application/json:
              examples:
                transfers-approve:
                  $ref: '#/components/examples/post-transfers-approve-transfers-approve-200'
          description: 'No Content - look at the actual response code for the status
            of the request. '
          headers:
            Idempotency-Key:
              $ref: '#/components/headers/Idempotency-Key'
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
          description: Unauthorized - authentication required.
          headers:
            auth-param1:
              $ref: '#/components/headers/auth-param1'
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TransferServiceRestServiceError'
          description: Forbidden - insufficient permissions to process the request.
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TransferServiceRestServiceError'
          description: Unprocessable Entity - a request validation error.
          headers:
            Idempotency-Key:
              $ref: '#/components/headers/Idempotency-Key'
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TransferServiceRestServiceError'
          description: Internal Server Error - the server could not process the request.
      security:
        - clientKey: []
        - BasicAuth: []
        - ApiKeyAuth: []
      summary: Approve initiated transfers
      tags:
        - Transfers
      x-addedInVersion: "3"
      x-sortIndex: 2
      x-methodName: approveInitiatedTransfers
  /transfers/cancel:
    post:
      description: |-
        Initiates the cancellation of a list of transfers that triggered an additional [review](https://docs.adyen.com/api-explorer/transfers/latest/post/transfers#request-review). Adyen sends the outcome of the cancel request through webhooks.

        To use this endpoint:
        - Your API credential must have the **TransferService Approve** [role](https://docs.adyen.com/platforms/manage-access/webservice-roles/?tab=transfers_3).
        - The account holder must have the required [capabilities](https://docs.adyen.com/platforms/verification-overview/capabilities).

        Reach out to your Adyen contact to set up these permissions.
      operationId: post-transfers-cancel
      parameters:
        - $ref: '#/components/parameters/Idempotency-Key'
      requestBody:
        content:
          application/json:
            examples:
              transfers-cancel:
                $ref: '#/components/examples/post-transfers-cancel-transfers-cancel'
            schema:
              $ref: '#/components/schemas/CancelTransfersRequest'
      responses:
        "200":
          content:
            application/json:
              examples:
                transfers-cancel:
                  $ref: '#/components/examples/post-transfers-cancel-transfers-cancel-200'
          description: 'No Content - look at the actual response code for the status
            of the request. '
          headers:
            Idempotency-Key:
              $ref: '#/components/headers/Idempotency-Key'
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TransferServiceRestServiceError'
          description: Unauthorized - authentication required.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TransferServiceRestServiceError'
          description: Forbidden - insufficient permissions to process the request.
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TransferServiceRestServiceError'
          description: Unprocessable Entity - a request validation error.
          headers:
            Idempotency-Key:
              $ref: '#/components/headers/Idempotency-Key'
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TransferServiceRestServiceError'
          description: Internal Server Error - the server could not process the request.
      security:
        - clientKey: []
        - BasicAuth: []
        - ApiKeyAuth: []
      summary: Cancel initiated transfers
      tags:
        - Transfers
      x-addedInVersion: "3"
      x-sortIndex: 3
      x-methodName: cancelInitiatedTransfers
  /transfers/{id}:
    get:
      description: Returns the details of a specified transfer.
      operationId: get-transfers-id
      parameters:
        - description: Unique identifier of the transfer.
          explode: false
          in: path
          name: id
          required: true
          schema:
            type: string
          style: simple
      responses:
        "200":
          content:
            application/json:
              examples:
                success:
                  $ref: '#/components/examples/get-transfers-id-success-200'
              schema:
                $ref: '#/components/schemas/TransferData'
          description: OK - the request has succeeded.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TransferServiceRestServiceError'
          description: Unauthorized - authentication required.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TransferServiceRestServiceError'
          description: Forbidden - insufficient permissions to process the request.
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TransferServiceRestServiceError'
          description: Unprocessable Entity - a request validation error.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TransferServiceRestServiceError'
          description: Internal Server Error - the server could not process the request.
      security:
        - clientKey: []
        - BasicAuth: []
        - ApiKeyAuth: []
      summary: Get a transfer
      tags:
        - Transfers
      x-addedInVersion: "4"
      x-sortIndex: 6
      x-methodName: getTransfer
  /transfers/{transferId}/returns:
    post:
      description: Initiates the return of previously transferred funds without creating
        a new `transferId`.
      operationId: post-transfers-transferId-returns
      parameters:
        - description: The unique identifier of the transfer to be returned.
          explode: false
          in: path
          name: transferId
          required: true
          schema:
            type: string
          style: simple
        - $ref: '#/components/parameters/Idempotency-Key'
      requestBody:
        content:
          application/json:
            examples:
              transfers-return:
                $ref: '#/components/examples/post-transfers-transferId-returns-transfers-return'
            schema:
              $ref: '#/components/schemas/ReturnTransferRequest'
      responses:
        "200":
          content:
            application/json:
              examples:
                transfers-return:
                  $ref: '#/components/examples/post-transfers-transferId-returns-transfers-return-200'
              schema:
                $ref: '#/components/schemas/ReturnTransferResponse'
          description: OK - the request has succeeded.
          headers:
            Idempotency-Key:
              $ref: '#/components/headers/Idempotency-Key'
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TransferServiceRestServiceError'
          description: Unauthorized - authentication required.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TransferServiceRestServiceError'
          description: Forbidden - insufficient permissions to process the request.
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TransferServiceRestServiceError'
          description: Unprocessable Entity - a request validation error.
          headers:
            Idempotency-Key:
              $ref: '#/components/headers/Idempotency-Key'
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TransferServiceRestServiceError'
          description: Internal Server Error - the server could not process the request.
      security:
        - clientKey: []
        - BasicAuth: []
        - ApiKeyAuth: []
      summary: Return a transfer
      tags:
        - Transfers
      x-addedInVersion: "3"
      x-sortIndex: 4
      x-methodName: returnTransfer
components:
  examples:
    get-transactions-id-success-200:
      description: Example response for a transaction
      summary: Response code - 200 OK
      value:
        id: EVJN4227C224222B5JBDHPTD672M52EUR
        amount:
          value: -10000
          currency: EUR
        status: booked
        transfer:
          id: 48TYZO5ZVURJ2FCW
          reference: Your internal reference for the transfer
        valueDate: 2023-08-11T16:19:35+02:00
        bookingDate: 2023-08-11T16:19:39+02:00
        creationDate: 2023-08-11T16:19:35+02:00
        accountHolder:
          id: AH00000000000000000000001
          description: Your description of the account holder
        balanceAccount:
          id: BA00000000000000000000001
          description: Your description of the balance account
        balancePlatform: YOUR_BALANCE_PLATFORM
    get-transactions-success-200:
      description: Example response for a list of transactions
      summary: Response code - 200 OK
      value:
        data:
          - balancePlatform: YOUR_BALANCE_PLATFORM
            creationDate: 2023-08-10T14:51:20+02:00
            id: EVJN42272224222B5JB8BRC84N686ZEUR
            accountHolder:
              description: Your description for the account holder
              id: AH00000000000000000000001
            amount:
              currency: USD
              value: -1000
            balanceAccount:
              description: Your description for the account holder
              id: BA00000000000000000000001
            bookingDate: 2023-08-10T14:51:33+02:00
            status: booked
            transfer:
              id: 3JNC3O5ZVFLLGV4B
              reference: Your internal reference for the transfer
            valueDate: 2023-08-10T14:51:20+02:00
          - balancePlatform: YOUR_BALANCE_PLATFORM
            creationDate: 2023-08-10T15:34:31+02:00
            id: EVJN4227C224222B5JB8G3Q89N2NB6EUR
            accountHolder:
              description: Your description for the account holder
              id: AH00000000000000000000001
            amount:
              currency: USD
              value: 123
            balanceAccount:
              description: Your description for the account holder
              id: BA00000000000000000000001
            bookingDate: 2023-08-10T15:34:40+02:00
            status: booked
            transfer:
              id: 48POO45ZVG11166J
              reference: Your internal reference for the transfer
            valueDate: 2023-08-10T15:34:31+02:00
          - balancePlatform: YOUR_BALANCE_PLATFORM
            creationDate: 2023-08-11T13:45:46+02:00
            id: EVJN4227C224222B5JBD3XHF8P3L8GUSD
            accountHolder:
              description: Your description for the account holder
              id: AH00000000000000000000001
            amount:
              currency: USD
              value: -10000
            balanceAccount:
              description: Your description for the account holder
              id: BA00000000000000000000001
            bookingDate: 2023-08-11T13:45:57+02:00
            status: booked
            transfer:
              id: 48RTTW5ZVT8KU9DV
              reference: my-reference
            valueDate: 2023-08-11T13:45:46+02:00
          - balancePlatform: YOUR_BALANCE_PLATFORM
            creationDate: 2023-08-11T13:45:51+02:00
            id: EVJN42272224222B5JBD3XJGHF4J26USD
            accountHolder:
              description: Your description for the account holder
              id: AH00000000000000000000001
            amount:
              currency: USD
              value: 1000
            balanceAccount:
              description: Your description for the account holder
              id: BA00000000000000000000001
            bookingDate: 2023-08-11T13:45:58+02:00
            status: booked
            transfer:
              id: 48TYZO5ZVT8M1K47
              reference: my-reference
            valueDate: 2023-08-11T13:45:51+02:00
        _links:
          next:
            href: https://balanceplatform-api-test.adyen.com/btl/v4/transactions?balancePlatform=TestBalancePlatform&createdUntil=2023-08-20T13%3A07%3A40Z&createdSince=2023-08-10T10%3A50%3A40Z&cursor=S2B-c0p1N0tdN0l6RGhYK1YpM0lgOTUyMDlLXElyKE9LMCtyaFEuMj1NMHgidCsrJi1ZNnhqXCtqVi5JPGpRK1F2fCFqWzU33JTojSVNJc1J1VXhncS10QDd6JX9FQFl5Zn0uNyUvSXJNQTo
    get-transfers-id-success-200:
      description: Example response for a transfer
      summary: Response code - 200 OK
      value:
        balancePlatform: YOUR_BALANCE_PLATFORM
        creationDate: 2021-05-03T15:20:06+02:00
        id: 1W1UG35QQEBJLHZ8
        accountHolder:
          description: S. Eller - Staff 123
          id: AH32272223222B5CZW6QZ2V34
        amount:
          currency: EUR
          value: 5400
        balanceAccount:
          description: My Balance Account
          id: BA3227C223222B5B9SCR82TMV
        category: internal
        categoryData:
          type: internal
        counterparty:
          balanceAccountId: BA00000000000000000000001
        description: Your description
        direction: outgoing
        reason: approved
        reference: 312M2060T6S4UOIF
        status: booked
        balances:
          - balance: -5400
            currency: EUR
            received: 0
            reserved: 0
        events:
          - bookingDate: 2021-05-03T14:53:39+01:00
            id: EVJN4233Q22322375JQ72V55G92ZXF
            mutations:
              - currency: EUR
                received: -5400
            status: received
            type: accounting
            valueDate: 2021-05-03T14:53:39+01:00
          - bookingDate: 2021-05-03T14:53:39+01:00
            id: EVJN4233Q22322375JQ72V55GB4TPV
            mutations:
              - currency: EUR
                received: 5400
                reserved: -5400
            status: authorised
            type: accounting
            valueDate: 2021-05-03T14:53:39+01:00
          - bookingDate: 2021-05-03T14:53:39+01:00
            id: EVJN4233Q22322375JQ72V55GD53HZ
            mutations:
              - balance: -5400
                currency: EUR
                received: 0
                reserved: 5400
            status: booked
            transactionId: EVJN4233Q22322375JQ72V55GD53HZEUR
            type: accounting
            valueDate: 2021-05-03T14:53:39+01:00
        sequenceNumber: 3
        type: internalTransfer
    get-transfers-success-200:
      description: Example response for a list of transfers
      summary: Response code - 200 OK
      value:
        data:
          - balancePlatform: YOUR_BALANCE_PLATFORM
            creationDate: 2021-05-03T15:20:06+02:00
            id: 1W1UG35QQEBJLHZ8
            accountHolder:
              description: S. Eller - Staff 123
              id: AH32272223222B5CZW6QZ2V34
            amount:
              currency: EUR
              value: 5400
            balanceAccount:
              description: My Balance Account
              id: BA3227C223222B5B9SCR82TMV
            category: internal
            categoryData:
              type: internal
            counterparty:
              balanceAccountId: BA00000000000000000000001
            description: Your description
            direction: outgoing
            reason: approved
            reference: 312M2060T6S4UOIF
            status: booked
            balances:
              - balance: -5400
                currency: EUR
                received: 0
                reserved: 0
            events:
              - bookingDate: 2021-05-03T14:53:39+01:00
                id: EVJN4233Q22322375JQ72V55G92ZXF
                mutations:
                  - currency: EUR
                    received: -5400
                status: received
                type: accounting
                valueDate: 2021-05-03T14:53:39+01:00
              - bookingDate: 2021-05-03T14:53:39+01:00
                id: EVJN4233Q22322375JQ72V55GB4TPV
                mutations:
                  - currency: EUR
                    received: 5400
                    reserved: -5400
                status: authorised
                type: accounting
                valueDate: 2021-05-03T14:53:39+01:00
              - bookingDate: 2021-05-03T14:53:39+01:00
                id: EVJN4233Q22322375JQ72V55GD53HZ
                mutations:
                  - balance: -5400
                    currency: EUR
                    received: 0
                    reserved: 5400
                status: booked
                transactionId: EVJN4233Q22322375JQ72V55GD53HZEUR
                type: accounting
                valueDate: 2021-05-03T14:53:39+01:00
            sequenceNumber: 3
            type: internalTransfer
          - balancePlatform: YOUR_BALANCE_PLATFORM
            creationDate: 2021-08-02T15:20:06+02:00
            id: 312M2060T5Z3YWYQ
            accountHolder:
              description: S. Doe - Staff 124
              id: AH443397232222B5CZW6QZ2V34
            amount:
              currency: EUR
              value: 15000
            balanceAccount:
              description: My Balance Account
              id: BA3227C2582222B5B9SCR82VHM
            category: internal
            categoryData:
              type: internal
            counterparty:
              balanceAccountId: BA00000000000000000000001
            description: Your description
            direction: outgoing
            reason: approved
            reference: 312M2060T6S4UOIF
            status: booked
            balances:
              - balance: -15000
                currency: EUR
                received: 0
                reserved: 0
            events:
              - bookingDate: 2021-08-02T14:53:39+01:00
                id: EVJN4233Q22322375JQ72V55G92ZXF
                mutations:
                  - currency: EUR
                    received: -15000
                status: received
                type: accounting
                valueDate: 2021-08-02T14:53:39+01:00
              - bookingDate: 2021-08-02T14:53:39+01:00
                id: EVJN4233Q22322375JQ72V55GB4TPV
                mutations:
                  - currency: EUR
                    received: 15000
                    reserved: -15000
                status: authorised
                type: accounting
                valueDate: 2021-08-02T14:53:39+01:00
              - bookingDate: 2021-08-02T14:53:39+01:00
                id: EVASDFOUPASFDHSADFA6SN65FG6TD53HZ
                mutations:
                  - balance: -15000
                    currency: EUR
                    received: 0
                    reserved: 15000
                status: booked
                transactionId: EVJN4233Q22322375JQ6SN65FG6TFTEUR
                type: accounting
                valueDate: 2021-08-02T14:53:39+01:00
            sequenceNumber: 3
            type: internalTransfer
        _links:
          next:
            href: https://balanceplatform-api-test.adyen.com/btl/v4/transfers?balancePlatform=YOUR_BALANCE_PLATFORM&createdUntil=2021-12-21T00%3A00%3A00Z&createdSince=2021-03-21T00%3A00%3A00Z&limit=2&cursor=S2B-TSAjOkIrYlIlbjdqe0RreHRyM32lKRSxubXBHRkhHL2E32XitQQz5SfzpucD5HbHwpM1p6NDR1eXVQLFF6MmY33J32sobDxQYT90MHIud1hwLnd6JitcX32xJ
    post-grants-requestGrant:
      description: Example request for grant payout
      summary: Request grant payout to a balance account
      value:
        grantAccountId: CG00000000000000000000001
        grantOfferId: "0000000000000001"
        counterparty:
          accountHolderId: AH00000000000000000000001
          balanceAccountId: BA00000000000000000000001
    post-grants-requestGrant-200:
      description: Example response for requesting grant payout
      summary: Grant payout requested
      value:
        id: GR00000000000000000000001
        grantAccountId: CG00000000000000000000001
        grantOfferId: "0000000000000001"
        counterparty:
          accountHolderId: AH00000000000000000000001
          balanceAccountId: BA00000000000000000000001
        amount:
          currency: EUR
          value: 1000000
        fee:
          amount:
            value: 120000
            currency: EUR
        balances:
          currency: EUR
          fee: 120000
          principal: 1000000
          total: 1120000
        repayment:
          basisPoints: 1400
        status: Pending
    post-transfers-approve-transfers-approve:
      description: Example request for approving transfers
      summary: Approve transfers
      value:
        transferIds:
          - APUFHASUDF4AS
          - 407ASFPUAHSFA
    post-transfers-approve-transfers-approve-200:
      description: Example response for approving transfers (No content)
      summary: Successfully approved transfers (No content)
      value: {}
    post-transfers-cancel-transfers-cancel:
      description: Example request for canceling transfers
      summary: Cancel transfers
      value:
        transferIds:
          - APUFHASUDF4AS
          - 407ASFPUAHSFA
    post-transfers-cancel-transfers-cancel-200:
      description: Example response for cancelling transfers (No content)
      summary: Successfully canceled transfers (No content)
      value: {}
    post-transfers-payout-cross-border:
      description: Example request to make a cross-border transfer
      summary: Make a cross-border transfer
      value:
        amount:
          value: 110000
          currency: EUR
        balanceAccountId: BAB8B2C3D4E5F6G7H8D9J6GD4
        category: bank
        counterparty:
          bankAccount:
            accountHolder:
              fullName: A. Klaassen
              address:
                city: San Francisco
                country: US
                postalCode: "94678"
                stateOrProvince: CA
                line1: "274"
                line2: Brannan Street
            accountIdentification:
              type: numberAndBic
              accountNumber: "123456789"
              bic: BOFAUS3NXXX
        priority: crossBorder
        referenceForBeneficiary: Your-reference-sent-to-the-beneficiary
        reference: Your internal reference for the transfer
        description: Your description for the transfer
    post-transfers-payout-cross-border-202:
      description: Example response for a transfers request
      summary: Response code - 202 Accepted
      value:
        id: 1W1UG35U8A9J5ZLG
        accountHolder:
          description: Your account holder description
          id: AH3227C223222C5GXQXF658WB
          reference: Your account holder reference
        amount:
          value: 110000
          currency: EUR
        balanceAccount:
          description: Your balance account description
          id: BAB8B2C3D4E5F6G7H8D9J6GD4
          reference: Your balance account reference
        category: bank
        categoryData:
          priority: crossBorder
          type: bank
        counterparty:
          bankAccount:
            accountHolder:
              fullName: A. Klaassen
              address:
                city: San Francisco
                country: US
                postalCode: "94678"
                stateOrProvince: CA
                line1: "274"
                line2: Brannan Street
            accountIdentification:
              type: numberAndBic
              accountNumber: "123456789"
              bic: BOFAUS3NXXX
        paymentInstrument:
          description: Your payment instrument description
          id: PI3222G223222G59347DAA265
          reference: Your payment instrument reference
        referenceForBeneficiary: Your-reference-sent-to-the-beneficiary
        reference: Your internal reference for the transfer
        description: Your description for the transfer
        direction: outgoing
        reason: approved
        status: authorised
    post-transfers-payout-local-transfer-sepa:
      description: Example request to make a SEPA funds transfer
      summary: Make a SEPA funds transfer
      value:
        amount:
          value: 110000
          currency: EUR
        balanceAccountId: BAB8B2C3D4E5F6G7H8D9J6GD4
        category: bank
        counterparty:
          bankAccount:
            accountHolder:
              fullName: A. Klaassen
            accountIdentification:
              type: iban
              iban: NL91ABNA0417164300
        priority: regular
        referenceForBeneficiary: Your-reference-sent-to-the-beneficiary
        reference: Your internal reference for the transfer
        description: Your description for the transfer
    post-transfers-payout-local-transfer-sepa-202:
      description: Example response for a transfers request
      summary: Response code - 202 Accepted
      value:
        id: 1W1UG35U8A9J5ZLG
        accountHolder:
          description: Your account holder description
          id: AH3227C223222C5GXQXF658WB
          reference: Your account holder reference
        amount:
          value: 110000
          currency: EUR
        balanceAccount:
          description: Your balance account description
          id: BAB8B2C3D4E5F6G7H8D9J6GD4
          reference: Your balance account reference
        category: bank
        categoryData:
          priority: regular
          type: bank
        counterparty:
          bankAccount:
            accountHolder:
              fullName: A. Klaassen
            accountIdentification:
              type: iban
              iban: NL91ABNA0417164300
        paymentInstrument:
          description: Your payment instrument description
          id: PI3222G223222G59347DAA265
          reference: Your payment instrument reference
        referenceForBeneficiary: Your-reference-sent-to-the-beneficiary
        reference: Your internal reference for the transfer
        description: Your description for the transfer
        direction: outgoing
        reason: approved
        status: authorised
    post-transfers-payout-local-transfer-us:
      description: Example request to make a US local funds transfer
      summary: Make a US local funds transfer
      value:
        amount:
          value: 110000
          currency: USD
        balanceAccountId: BAB8B2C3D4E5F6G7H8D9J6GD4
        category: bank
        counterparty:
          bankAccount:
            accountHolder:
              fullName: A. Klaassen
            accountIdentification:
              type: usLocal
              accountNumber: "123456789"
              routingNumber: "011000138"
        priority: regular
        referenceForBeneficiary: Your-reference-sent-to-the-beneficiary
        reference: Your internal reference for the transfer
        description: Your description for the transfer
    post-transfers-payout-local-transfer-us-202:
      description: Example response for a transfers request
      summary: Response code - 202 Accepted
      value:
        id: 1W1UG35U8A9J5ZLG
        accountHolder:
          description: Your account holder description
          id: AH3227C223222C5GXQXF658WB
          reference: Your account holder reference
        amount:
          value: 110000
          currency: USD
        balanceAccount:
          description: Your balance account description
          id: BAB8B2C3D4E5F6G7H8D9J6GD4
          reference: Your balance account reference
        category: bank
        categoryData:
          priority: regular
          type: bank
        counterparty:
          bankAccount:
            accountHolder:
              fullName: A. Klaassen
            accountIdentification:
              type: usLocal
              accountNumber: "123456789"
              routingNumber: "011000138"
        paymentInstrument:
          description: Your payment instrument description
          id: PI3222G223222G59347DAA265
          reference: Your payment instrument reference
        referenceForBeneficiary: Your-reference-sent-to-the-beneficiary
        reference: Your internal reference for the transfer
        description: Your description for the transfer
        direction: outgoing
        reason: approved
        status: authorised
    post-transfers-payout-to-balance-account:
      description: Example request to transfer funds to another balance account
      summary: Transfer funds to another balance account
      value:
        amount:
          value: 10000
          currency: EUR
        balanceAccountId: BAB8B2C3D4E5F6G7H8D9J6GD4
        category: internal
        counterparty:
          balanceAccountId: BA32272223222B5LPRFDW7J9G
        referenceForBeneficiary: Your-reference-sent-to-the-beneficiary
        reference: Your internal reference for the transfer
        description: Your description for the transfer
    post-transfers-payout-to-balance-account-202:
      description: Example response for a transfers request
      summary: Response code - 202 Accepted
      value:
        id: 1W1UG35U8A9J5ZLG
        accountHolder:
          description: Your account holder description
          id: AH3227C223222C5GXQXF658WB
          reference: Your account holder reference
        amount:
          currency: EUR
          value: 10000
        balanceAccount:
          description: Your balance account description
          id: BAB8B2C3D4E5F6G7H8D9J6GD4
          reference: Your balance account reference
        category: internal
        counterparty:
          balanceAccountId: BA32272223222B5LPRFDW7J9G
        referenceForBeneficiary: Your-reference-sent-to-the-beneficiary
        reference: Your internal reference for the transfer
        description: Your description for the transfer
        direction: outgoing
        reason: approved
        status: authorised
    post-transfers-payout-to-transfer-instrument:
      description: Example request to pay out to a transfer instrument
      summary: Pay out to a transfer instrument
      value:
        amount:
          value: 80000
          currency: EUR
        balanceAccountId: BAB8B2C3D4E5F6G7H8D9J6GD4
        category: bank
        counterparty:
          transferInstrumentId: SE1234567890ABC1234567890
        priority: regular
        referenceForBeneficiary: Your-reference-sent-to-the-beneficiary
        reference: Your internal reference for the transfer
        description: Your description for the transfer
    post-transfers-payout-to-transfer-instrument-202:
      description: Example response for a transfers request
      summary: Response code - 202 Accepted
      value:
        id: 1W1UG35U8A9J5ZLG
        accountHolder:
          description: Your account holder description
          id: AH3227C223222C5GXQXF658WB
          reference: Your account holder reference
        amount:
          value: 80000
          currency: EUR
        balanceAccount:
          description: Your balance account description
          id: BAB8B2C3D4E5F6G7H8D9J6GD4
          reference: Your balance account reference
        category: bank
        categoryData:
          priority: regular
          type: bank
        counterparty:
          transferInstrumentId: SE1234567890ABC1234567890
        paymentInstrument:
          description: Your payment instrument description
          id: PI3222G223222G59347DAA265
          reference: Your payment instrument reference
        referenceForBeneficiary: Your-reference-sent-to-the-beneficiary
        reference: Your internal reference for the transfer
        description: Your description for the transfer
        direction: outgoing
        reason: approved
        status: authorised
    post-transfers-transferId-returns-transfers-return:
      description: Example request to return an incoming internal transfer
      summary: Return an incoming internal transfer
      value:
        amount:
          value: 189
          currency: EUR
        reference: Your internal reference for the return
    post-transfers-transferId-returns-transfers-return-200:
      description: Example response for the return of an incoming internal transfer
      summary: Successful return of an incoming internal transfer
      value:
        id: 1W1UG35QQEBJLHZ8
        reference: Your internal reference for the return
        status: Authorised
        transferId: 1W1UG35U8A9J5ZLG
  headers:
    Idempotency-Key:
      description: The idempotency key used for processing the request. Present if
        the key was provided in the request.
      explode: false
      schema: {}
      style: simple
    auth-param1:
      description: Base64-encoded blob of data. You will need auth-param1 when authenticating
        your user using the SDK.
      explode: false
      schema: {}
      style: simple
  parameters:
    Idempotency-Key:
      description: A unique identifier for the message with a maximum of 64 characters
        (we recommend a UUID).
      example: 37ca9c97-d1d1-4c62-89e8-706891a563ed
      explode: false
      in: header
      name: Idempotency-Key
      required: false
      schema:
        type: string
      style: simple
  schemas:
    AULocalAccountIdentification:
      additionalProperties: false
      example:
        bsbCode: bsbCode
        accountNumber: accountNumber
        type: auLocal
      properties:
        accountNumber:
          description: "The bank account number, without separators or whitespace."
          maxLength: 9
          minLength: 5
          type: string
        bsbCode:
          description: "The 6-digit [Bank State Branch (BSB) code](https://en.wikipedia.org/wiki/Bank_state_branch),\
            \ without separators or whitespace."
          maxLength: 6
          minLength: 6
          type: string
        type:
          default: auLocal
          description: '**auLocal**'
          enum:
            - auLocal
          type: string
      required:
        - accountNumber
        - bsbCode
        - type
    AdditionalBankIdentification:
      additionalProperties: false
      properties:
        code:
          description: The value of the additional bank identification.
          type: string
        type:
          description: |-
            The type of additional bank identification, depending on the country.

            Possible values:

             * **gbSortCode**: The 6-digit [UK sort code](https://en.wikipedia.org/wiki/Sort_code), without separators or spaces
             * **usRoutingNumber**: The 9-digit [routing number](https://en.wikipedia.org/wiki/ABA_routing_transit_number), without separators or spaces.
          enum:
            - gbSortCode
            - usRoutingNumber
          type: string
    Address:
      additionalProperties: false
      example:
        country: country
        stateOrProvince: stateOrProvince
        city: city
        postalCode: postalCode
        line2: line2
        line1: line1
      properties:
        city:
          description: |-
            The name of the city.

            Supported characters: [a-z] [A-Z] [0-9] . - — / # , ’ ° ( ) : ; [ ] & \ | and Space.
          minLength: 3
          type: string
        country:
          description: "The two-character ISO 3166-1 alpha-2 country code. For example,\
            \ **US**, **NL**, or **GB**."
          type: string
        line1:
          description: |-
            First line of the street address.

            Supported characters: [a-z] [A-Z] [0-9] . - — / # , ’ ° ( ) : ; [ ] & \ | and Space.
          type: string
        line2:
          description: |-
            Second line of the street address.

            Supported characters: [a-z] [A-Z] [0-9] . - — / # , ’ ° ( ) : ; [ ] & \ | and Space.
          type: string
        postalCode:
          description: |
            The postal code.
            Maximum length:
            * 5 digits for an address in the US.
            * 10 characters for an address in all other countries.

            Supported characters: [a-z] [A-Z] [0-9] and Space.
          minLength: 3
          type: string
        stateOrProvince:
          description: |2
               The two-letter ISO 3166-2 state or province code. For example, **CA** in the US or **ON** in Canada.
               > Required for the US and Canada.
          type: string
      required:
        - country
    Airline:
      additionalProperties: false
      example:
        ticketNumber: ticketNumber
        legs:
          - arrivalAirportCode: arrivalAirportCode
            carrierCode: carrierCode
            basicFareCode: basicFareCode
            departureDate: departureDate
            departureAirportCode: departureAirportCode
            flightNumber: flightNumber
          - arrivalAirportCode: arrivalAirportCode
            carrierCode: carrierCode
            basicFareCode: basicFareCode
            departureDate: departureDate
            departureAirportCode: departureAirportCode
            flightNumber: flightNumber
      properties:
        legs:
          description: Details about the flight legs for this ticket.
          items:
            $ref: '#/components/schemas/Leg'
          type: array
        ticketNumber:
          description: The ticket's unique identifier
          type: string
    Amount:
      additionalProperties: false
      example:
        currency: currency
        value: 0
      properties:
        currency:
          description: "The three-character [ISO currency code](https://docs.adyen.com/development-resources/currency-codes#currency-codes)."
          maxLength: 3
          minLength: 3
          type: string
        value:
          description: "The amount of the transaction, in [minor units](https://docs.adyen.com/development-resources/currency-codes#minor-units)."
          format: int64
          type: integer
      required:
        - currency
        - value
    AmountAdjustment:
      additionalProperties: false
      example:
        basepoints: 5
        amount:
          currency: currency
          value: 0
        amountAdjustmentType: atmMarkup
      properties:
        amount:
          $ref: '#/components/schemas/Amount'
        amountAdjustmentType:
          description: |-
            The type of markup that is applied to an authorised payment.

            Possible values: **exchange**, **forexMarkup**, **authHoldReserve**, **atmMarkup**.
          enum:
            - atmMarkup
            - authHoldReserve
            - exchange
            - forexMarkup
          type: string
          x-addedInVersion: "3"
        basepoints:
          description: The basepoints associated with the applied markup.
          format: int32
          type: integer
          x-addedInVersion: "3"
    ApproveTransfersRequest:
      additionalProperties: false
      example:
        transferIds:
          - transferIds
          - transferIds
      properties:
        transferIds:
          description: Contains the unique identifiers of the transfers that you want
            to approve.
          items:
            type: string
          type: array
    BRLocalAccountIdentification:
      additionalProperties: false
      properties:
        accountNumber:
          description: "The bank account number, without separators or whitespace."
          maxLength: 10
          minLength: 1
          type: string
        bankCode:
          description: "The 3-digit bank code, with leading zeros."
          maxLength: 3
          minLength: 3
          type: string
        branchNumber:
          description: "The bank account branch number, without separators or whitespace."
          maxLength: 4
          minLength: 1
          type: string
        ispb:
          description: "The 8-digit ISPB, with leading zeros."
          maxLength: 8
          minLength: 8
          type: string
        type:
          default: brLocal
          description: '**brLocal**'
          enum:
            - brLocal
          type: string
      required:
        - accountNumber
        - bankCode
        - branchNumber
        - type
    BalanceMutation:
      additionalProperties: false
      example:
        balance: 0
        reserved: 1
        currency: currency
        received: 6
      properties:
        balance:
          description: The amount in the payment's currency that is debited or credited
            on the balance accounting register.
          format: int64
          type: integer
          x-addedInVersion: "3"
        currency:
          description: "The three-character [ISO currency code](https://docs.adyen.com/development-resources/currency-codes)."
          type: string
          x-addedInVersion: "3"
        received:
          description: The amount in the payment's currency that is debited or credited
            on the received accounting register.
          format: int64
          type: integer
          x-addedInVersion: "3"
        reserved:
          description: The amount in the payment's currency that is debited or credited
            on the reserved accounting register.
          format: int64
          type: integer
          x-addedInVersion: "3"
    BankAccountV3:
      additionalProperties: false
      example:
        accountHolder:
          reference: reference
          firstName: firstName
          lastName: lastName
          address:
            country: country
            stateOrProvince: stateOrProvince
            city: city
            postalCode: postalCode
            line2: line2
            line1: line1
          fullName: fullName
          dateOfBirth: 2000-01-23
          type: unknown
        accountIdentification:
          bsbCode: bsbCode
          accountNumber: accountNumber
          type: auLocal
      properties:
        accountHolder:
          $ref: '#/components/schemas/PartyIdentification'
        accountIdentification:
          $ref: '#/components/schemas/BankAccountV3_accountIdentification'
      required:
        - accountHolder
        - accountIdentification
    BankCategoryData:
      additionalProperties: false
      example:
        priority: crossBorder
        type: bank
      properties:
        priority:
          description: |-
            The priority for the bank transfer. This sets the speed at which the transfer is sent and the fees that you have to pay. Required for transfers with `category` **bank**.

            Possible values:

            * **regular**: for normal, low-value transactions.

            * **fast**: a faster way to transfer funds, but the fees are higher. Recommended for high-priority, low-value transactions.

            * **wire**: the fastest way to transfer funds, but this has the highest fees. Recommended for high-priority, high-value transactions.

            * **instant**: for instant funds transfers in [SEPA countries](https://www.ecb.europa.eu/paym/integration/retail/sepa/html/index.en.html).

            * **crossBorder**: for high-value transfers to a recipient in a different country.

            * **internal**: for transfers to an Adyen-issued business bank account (by bank account number/IBAN).
          enum:
            - crossBorder
            - fast
            - instant
            - internal
            - regular
            - wire
          type: string
          x-addedInVersion: "4"
        type:
          default: bank
          description: '**bank**'
          enum:
            - bank
          type: string
    CALocalAccountIdentification:
      additionalProperties: false
      properties:
        accountNumber:
          description: "The 5- to 12-digit bank account number, without separators\
            \ or whitespace."
          maxLength: 12
          minLength: 5
          type: string
        accountType:
          default: checking
          description: |-
            The bank account type.

            Possible values: **checking** or **savings**. Defaults to **checking**.
          enum:
            - checking
            - savings
          type: string
        institutionNumber:
          description: "The 3-digit institution number, without separators or whitespace."
          maxLength: 3
          minLength: 3
          type: string
        transitNumber:
          description: "The 5-digit transit number, without separators or whitespace."
          maxLength: 5
          minLength: 5
          type: string
        type:
          default: caLocal
          description: '**caLocal**'
          enum:
            - caLocal
          type: string
      required:
        - accountNumber
        - institutionNumber
        - transitNumber
        - type
    CZLocalAccountIdentification:
      additionalProperties: false
      properties:
        accountNumber:
          description: |-
            The 2- to 16-digit bank account number (Číslo účtu) in the following format:

            - The optional prefix (předčíslí).

            - The required second part (základní část) which must be at least two non-zero digits.

            Examples:

            - **19-123457** (with prefix)

            - **123457** (without prefix)

            - **000019-0000123457** (with prefix, normalized)

            - **000000-0000123457** (without prefix, normalized)
          maxLength: 17
          minLength: 2
          type: string
        bankCode:
          description: "The 4-digit bank code (Kód banky), without separators or whitespace."
          maxLength: 4
          minLength: 4
          type: string
        type:
          default: czLocal
          description: '**czLocal**'
          enum:
            - czLocal
          type: string
      required:
        - accountNumber
        - bankCode
        - type
    CancelTransfersRequest:
      additionalProperties: false
      example:
        transferIds:
          - transferIds
          - transferIds
      properties:
        transferIds:
          description: Contains the unique identifiers of the transfers that you want
            to cancel.
          items:
            type: string
          type: array
    CapitalBalance:
      additionalProperties: false
      example:
        principal: 1
        total: 5
        fee: 6
        currency: currency
      properties:
        currency:
          description: "The three-character [ISO currency code](https://docs.adyen.com/development-resources/currency-codes)."
          type: string
        fee:
          description: Fee amount.
          format: int64
          type: integer
        principal:
          description: Principal amount.
          format: int64
          type: integer
        total:
          description: Total amount. A sum of principal amount and fee amount.
          format: int64
          type: integer
      required:
        - currency
        - fee
        - principal
        - total
    CapitalGrant:
      additionalProperties: false
      example:
        grantAccountId: grantAccountId
        amount:
          currency: currency
          value: 0
        balances:
          principal: 1
          total: 5
          fee: 6
          currency: currency
        fee:
          amount:
            currency: currency
            value: 0
        grantOfferId: grantOfferId
        counterparty:
          balanceAccountId: balanceAccountId
          accountHolderId: accountHolderId
          transferInstrumentId: transferInstrumentId
        id: id
        repayment:
          basisPoints: 5
          term:
            estimatedDays: 2
            maximumDays: 7
          threshold:
            amount:
              currency: currency
              value: 0
        status: Pending
      properties:
        amount:
          $ref: '#/components/schemas/Amount'
        balances:
          $ref: '#/components/schemas/CapitalBalance'
        counterparty:
          $ref: '#/components/schemas/Counterparty'
        fee:
          $ref: '#/components/schemas/Fee'
        grantAccountId:
          description: The identifier of the grant account used for the grant.
          type: string
        grantOfferId:
          description: The identifier of the grant offer that has been selected and
            from which the grant details will be used.
          type: string
        id:
          description: The identifier of the grant reference.
          type: string
        repayment:
          $ref: '#/components/schemas/Repayment'
        status:
          description: "The current status of the grant. Possible values: **Pending**,\
            \ **Active**, **Repaid**, **WrittenOff**, **Failed**, **Revoked**."
          enum:
            - Pending
            - Active
            - Repaid
            - Failed
            - WrittenOff
            - Revoked
          type: string
      required:
        - balances
        - grantAccountId
        - grantOfferId
        - id
        - status
    CapitalGrantInfo:
      additionalProperties: false
      example:
        grantAccountId: grantAccountId
        grantOfferId: grantOfferId
        counterparty:
          balanceAccountId: balanceAccountId
          accountHolderId: accountHolderId
          transferInstrumentId: transferInstrumentId
      properties:
        counterparty:
          $ref: '#/components/schemas/Counterparty'
        grantAccountId:
          description: The identifier of the grant account used for the grant.
          type: string
        grantOfferId:
          description: The identifier of the grant offer that has been selected and
            from which the grant details will be used.
          type: string
      required:
        - grantAccountId
        - grantOfferId
    CapitalGrants:
      additionalProperties: false
      example:
        grants:
          - grantAccountId: grantAccountId
            amount:
              currency: currency
              value: 0
            balances:
              principal: 1
              total: 5
              fee: 6
              currency: currency
            fee:
              amount:
                currency: currency
                value: 0
            grantOfferId: grantOfferId
            counterparty:
              balanceAccountId: balanceAccountId
              accountHolderId: accountHolderId
              transferInstrumentId: transferInstrumentId
            id: id
            repayment:
              basisPoints: 5
              term:
                estimatedDays: 2
                maximumDays: 7
              threshold:
                amount:
                  currency: currency
                  value: 0
            status: Pending
          - grantAccountId: grantAccountId
            amount:
              currency: currency
              value: 0
            balances:
              principal: 1
              total: 5
              fee: 6
              currency: currency
            fee:
              amount:
                currency: currency
                value: 0
            grantOfferId: grantOfferId
            counterparty:
              balanceAccountId: balanceAccountId
              accountHolderId: accountHolderId
              transferInstrumentId: transferInstrumentId
            id: id
            repayment:
              basisPoints: 5
              term:
                estimatedDays: 2
                maximumDays: 7
              threshold:
                amount:
                  currency: currency
                  value: 0
            status: Pending
      properties:
        grants:
          description: The unique identifier of the grant.
          items:
            $ref: '#/components/schemas/CapitalGrant'
          type: array
      required:
        - grants
    Card:
      additionalProperties: false
      example:
        cardHolder:
          reference: reference
          firstName: firstName
          lastName: lastName
          address:
            country: country
            stateOrProvince: stateOrProvince
            city: city
            postalCode: postalCode
            line2: line2
            line1: line1
          fullName: fullName
          dateOfBirth: 2000-01-23
          type: unknown
        cardIdentification:
          number: number
          startMonth: startMonth
          issueNumber: issueNumber
          storedPaymentMethodId: storedPaymentMethodId
          expiryMonth: expiryMonth
          startYear: startYear
          expiryYear: expiryYear
      properties:
        cardHolder:
          $ref: '#/components/schemas/PartyIdentification'
        cardIdentification:
          $ref: '#/components/schemas/CardIdentification'
      required:
        - cardHolder
        - cardIdentification
    CardIdentification:
      additionalProperties: false
      example:
        number: number
        startMonth: startMonth
        issueNumber: issueNumber
        storedPaymentMethodId: storedPaymentMethodId
        expiryMonth: expiryMonth
        startYear: startYear
        expiryYear: expiryYear
      properties:
        expiryMonth:
          description: |-
            The expiry month of the card.

            Format: two digits. Add a leading zero for single-digit months. For example:
            * 03 = March
            * 11 = November
          maxLength: 2
          minLength: 2
          type: string
        expiryYear:
          description: |-
            The expiry year of the card.

            Format: four digits. For example: 2020
          maxLength: 4
          minLength: 4
          type: string
        issueNumber:
          description: The issue number of the card. Applies only to some UK debit
            cards.
          maxLength: 2
          minLength: 1
          type: string
        number:
          description: |-
            The card number without any separators.

            For security, the response only includes the last four digits of the card number.
          maxLength: 19
          minLength: 4
          type: string
        startMonth:
          description: |-
            The month when the card was issued. Applies only to some UK debit cards.

            Format: two digits. Add a leading zero for single-digit months. For example:
            * 03 = March
            * 11 = November
          maxLength: 2
          minLength: 2
          type: string
        startYear:
          description: |-
            The year when the card was issued. Applies only to some UK debit cards.

            Format: four digits. For example: 2020
          maxLength: 4
          minLength: 4
          type: string
        storedPaymentMethodId:
          description: |+
            The unique [token](/payouts/payout-service/pay-out-to-cards/manage-card-information#save-card-details) created to identify the counterparty.

          type: string
    ConfirmationTrackingData:
      additionalProperties: false
      example:
        type: confirmation
        status: credited
      properties:
        status:
          description: |-
            The status of the transfer.

            Possible values:

              - **credited**: the funds are credited to your user's transfer instrument or bank account.
          enum:
            - credited
          type: string
        type:
          default: confirmation
          description: |-
            The type of the tracking event.

            Possible values:

             - **confirmation**: the transfer passed Adyen's internal review.
          enum:
            - confirmation
          type: string
      required:
        - status
        - type
    Counterparty:
      additionalProperties: false
      example:
        balanceAccountId: balanceAccountId
        accountHolderId: accountHolderId
        transferInstrumentId: transferInstrumentId
      properties:
        accountHolderId:
          description: The identifier of the receiving account holder. The payout
            will default to the primary balance account of this account holder if
            no `balanceAccountId` is provided.
          type: string
        balanceAccountId:
          description: The identifier of the balance account that belongs to the receiving
            account holder.
          type: string
        transferInstrumentId:
          description: The identifier of the transfer instrument that belongs to the
            legal entity of the account holder.
          type: string
    CounterpartyInfoV3:
      additionalProperties: false
      example:
        balanceAccountId: balanceAccountId
        bankAccount:
          accountHolder:
            reference: reference
            firstName: firstName
            lastName: lastName
            address:
              country: country
              stateOrProvince: stateOrProvince
              city: city
              postalCode: postalCode
              line2: line2
              line1: line1
            fullName: fullName
            dateOfBirth: 2000-01-23
            type: unknown
          accountIdentification:
            bsbCode: bsbCode
            accountNumber: accountNumber
            type: auLocal
        transferInstrumentId: transferInstrumentId
        card:
          cardHolder:
            reference: reference
            firstName: firstName
            lastName: lastName
            address:
              country: country
              stateOrProvince: stateOrProvince
              city: city
              postalCode: postalCode
              line2: line2
              line1: line1
            fullName: fullName
            dateOfBirth: 2000-01-23
            type: unknown
          cardIdentification:
            number: number
            startMonth: startMonth
            issueNumber: issueNumber
            storedPaymentMethodId: storedPaymentMethodId
            expiryMonth: expiryMonth
            startYear: startYear
            expiryYear: expiryYear
      properties:
        balanceAccountId:
          description: "The unique identifier of the counterparty [balance account](https://docs.adyen.com/api-explorer/balanceplatform/latest/post/balanceAccounts#responses-200-id)."
          type: string
        bankAccount:
          $ref: '#/components/schemas/BankAccountV3'
        card:
          $ref: '#/components/schemas/Card'
        transferInstrumentId:
          description: "The unique identifier of the counterparty [transfer instrument](https://docs.adyen.com/api-explorer/legalentity/latest/post/transferInstruments#responses-200-id)."
          type: string
    CounterpartyV3:
      additionalProperties: false
      example:
        balanceAccountId: balanceAccountId
        bankAccount:
          accountHolder:
            reference: reference
            firstName: firstName
            lastName: lastName
            address:
              country: country
              stateOrProvince: stateOrProvince
              city: city
              postalCode: postalCode
              line2: line2
              line1: line1
            fullName: fullName
            dateOfBirth: 2000-01-23
            type: unknown
          accountIdentification:
            bsbCode: bsbCode
            accountNumber: accountNumber
            type: auLocal
        merchant:
          merchantId: merchantId
          postalCode: postalCode
          nameLocation:
            country: country
            city: city
            name: name
            countryOfOrigin: countryOfOrigin
            rawData: rawData
            state: state
          acquirerId: acquirerId
          mcc: mcc
        transferInstrumentId: transferInstrumentId
        card:
          cardHolder:
            reference: reference
            firstName: firstName
            lastName: lastName
            address:
              country: country
              stateOrProvince: stateOrProvince
              city: city
              postalCode: postalCode
              line2: line2
              line1: line1
            fullName: fullName
            dateOfBirth: 2000-01-23
            type: unknown
          cardIdentification:
            number: number
            startMonth: startMonth
            issueNumber: issueNumber
            storedPaymentMethodId: storedPaymentMethodId
            expiryMonth: expiryMonth
            startYear: startYear
            expiryYear: expiryYear
      properties:
        balanceAccountId:
          description: "The unique identifier of the counterparty [balance account](https://docs.adyen.com/api-explorer/balanceplatform/latest/post/balanceAccounts#responses-200-id)."
          type: string
        bankAccount:
          $ref: '#/components/schemas/BankAccountV3'
        card:
          $ref: '#/components/schemas/Card'
        merchant:
          $ref: '#/components/schemas/MerchantData'
        transferInstrumentId:
          description: "The unique identifier of the counterparty [transfer instrument](https://docs.adyen.com/api-explorer/legalentity/latest/post/transferInstruments#responses-200-id)."
          type: string
    DKLocalAccountIdentification:
      additionalProperties: false
      properties:
        accountNumber:
          description: The 4-10 digits bank account number (Kontonummer) (without
            separators or whitespace).
          maxLength: 10
          minLength: 4
          type: string
        bankCode:
          description: The 4-digit bank code (Registreringsnummer) (without separators
            or whitespace).
          maxLength: 4
          minLength: 4
          type: string
        type:
          default: dkLocal
          description: '**dkLocal**'
          enum:
            - dkLocal
          type: string
      required:
        - accountNumber
        - bankCode
        - type
    DirectDebitInformation:
      additionalProperties: false
      example:
        dueDate: 2000-01-23T04:56:07.000+00:00
        mandateId: mandateId
        dateOfSignature: 2000-01-23T04:56:07.000+00:00
        sequenceType: sequenceType
      properties:
        dateOfSignature:
          description: "The date when the direct debit mandate was accepted by your\
            \ user, in [ISO-8601](https://www.w3.org/TR/NOTE-datetime) format."
          format: date-time
          type: string
        dueDate:
          description: The date when the funds are deducted from your user's balance
            account.
          format: date-time
          type: string
        mandateId:
          description: Your unique identifier for the direct debit mandate.
          type: string
        sequenceType:
          description: |-
            Identifies the direct debit transfer's type.
            Possible values: **OneOff**, **First**, **Recurring**, **Final**.
          type: string
    EstimationTrackingData:
      additionalProperties: false
      properties:
        estimatedArrivalTime:
          description: The estimated time the beneficiary should have access to the
            funds.
          format: date-time
          type: string
        type:
          default: estimation
          description: "The type of tracking event. \n\nPossible values: \n\n- **estimation**:\
            \ the estimated date and time of when the funds will be credited has been\
            \ determined."
          enum:
            - estimation
          type: string
      required:
        - estimatedArrivalTime
        - type
    ExternalReason:
      additionalProperties: false
      example:
        code: code
        namespace: namespace
        description: description
      properties:
        code:
          description: The reason code.
          type: string
        description:
          description: The description of the reason code.
          type: string
        namespace:
          description: The namespace for the reason code.
          type: string
    Fee:
      additionalProperties: false
      example:
        amount:
          currency: currency
          value: 0
      properties:
        amount:
          $ref: '#/components/schemas/Amount'
      required:
        - amount
    FindTransfersResponse:
      additionalProperties: false
      example:
        data:
          - reason: accountHierarchyNotActive
            description: description
            transactionRulesResult:
              score: 9
              advice: advice
              triggeredTransactionRules:
                - reason: reason
                  transactionRule:
                    outcomeType: outcomeType
                    reference: reference
                    score: 3
                    description: description
                    id: id
                  transactionRuleSource:
                    id: id
                    type: type
                - reason: reason
                  transactionRule:
                    outcomeType: outcomeType
                    reference: reference
                    score: 3
                    description: description
                    id: id
                  transactionRuleSource:
                    id: id
                    type: type
              allHardBlockRulesPassed: true
            type: payment
            tracking:
              type: confirmation
              status: credited
            balancePlatform: balancePlatform
            reference: reference
            accountHolder:
              reference: reference
              description: description
              id: id
            balances:
              - balance: 0
                reserved: 1
                currency: currency
                received: 6
              - balance: 0
                reserved: 1
                currency: currency
                received: 6
            referenceForBeneficiary: referenceForBeneficiary
            review:
              numberOfApprovalsRequired: 2
              scaOnApproval: completed
            id: id
            events:
              - reason: accountHierarchyNotActive
                amount:
                  currency: currency
                  value: 0
                updateDate: 2000-01-23T04:56:07.000+00:00
                valueDate: 2000-01-23T04:56:07.000+00:00
                type: accounting
                modification:
                  reference: reference
                  id: id
                  type: type
                  direction: direction
                  status: approvalPending
                transactionId: transactionId
                trackingData:
                  type: confirmation
                  status: credited
                externalReason:
                  code: code
                  namespace: namespace
                  description: description
                eventsData:
                  - lodging:
                      - numberOfNights: 5
                        checkInDate: checkInDate
                      - numberOfNights: 5
                        checkInDate: checkInDate
                    airline:
                      ticketNumber: ticketNumber
                      legs:
                        - arrivalAirportCode: arrivalAirportCode
                          carrierCode: carrierCode
                          basicFareCode: basicFareCode
                          departureDate: departureDate
                          departureAirportCode: departureAirportCode
                          flightNumber: flightNumber
                        - arrivalAirportCode: arrivalAirportCode
                          carrierCode: carrierCode
                          basicFareCode: basicFareCode
                          departureDate: departureDate
                          departureAirportCode: departureAirportCode
                          flightNumber: flightNumber
                    type: merchantPurchaseData
                  - lodging:
                      - numberOfNights: 5
                        checkInDate: checkInDate
                      - numberOfNights: 5
                        checkInDate: checkInDate
                    airline:
                      ticketNumber: ticketNumber
                      legs:
                        - arrivalAirportCode: arrivalAirportCode
                          carrierCode: carrierCode
                          basicFareCode: basicFareCode
                          departureDate: departureDate
                          departureAirportCode: departureAirportCode
                          flightNumber: flightNumber
                        - arrivalAirportCode: arrivalAirportCode
                          carrierCode: carrierCode
                          basicFareCode: basicFareCode
                          departureDate: departureDate
                          departureAirportCode: departureAirportCode
                          flightNumber: flightNumber
                    type: merchantPurchaseData
                mutations:
                  - balance: 0
                    reserved: 1
                    currency: currency
                    received: 6
                  - balance: 0
                    reserved: 1
                    currency: currency
                    received: 6
                originalAmount:
                  currency: currency
                  value: 0
                bookingDate: 2000-01-23T04:56:07.000+00:00
                id: id
                arn: arn
                amountAdjustments:
                  - basepoints: 5
                    amount:
                      currency: currency
                      value: 0
                    amountAdjustmentType: atmMarkup
                  - basepoints: 5
                    amount:
                      currency: currency
                      value: 0
                    amountAdjustmentType: atmMarkup
                estimatedArrivalTime: 2000-01-23T04:56:07.000+00:00
                status: approvalPending
              - reason: accountHierarchyNotActive
                amount:
                  currency: currency
                  value: 0
                updateDate: 2000-01-23T04:56:07.000+00:00
                valueDate: 2000-01-23T04:56:07.000+00:00
                type: accounting
                modification:
                  reference: reference
                  id: id
                  type: type
                  direction: direction
                  status: approvalPending
                transactionId: transactionId
                trackingData:
                  type: confirmation
                  status: credited
                externalReason:
                  code: code
                  namespace: namespace
                  description: description
                eventsData:
                  - lodging:
                      - numberOfNights: 5
                        checkInDate: checkInDate
                      - numberOfNights: 5
                        checkInDate: checkInDate
                    airline:
                      ticketNumber: ticketNumber
                      legs:
                        - arrivalAirportCode: arrivalAirportCode
                          carrierCode: carrierCode
                          basicFareCode: basicFareCode
                          departureDate: departureDate
                          departureAirportCode: departureAirportCode
                          flightNumber: flightNumber
                        - arrivalAirportCode: arrivalAirportCode
                          carrierCode: carrierCode
                          basicFareCode: basicFareCode
                          departureDate: departureDate
                          departureAirportCode: departureAirportCode
                          flightNumber: flightNumber
                    type: merchantPurchaseData
                  - lodging:
                      - numberOfNights: 5
                        checkInDate: checkInDate
                      - numberOfNights: 5
                        checkInDate: checkInDate
                    airline:
                      ticketNumber: ticketNumber
                      legs:
                        - arrivalAirportCode: arrivalAirportCode
                          carrierCode: carrierCode
                          basicFareCode: basicFareCode
                          departureDate: departureDate
                          departureAirportCode: departureAirportCode
                          flightNumber: flightNumber
                        - arrivalAirportCode: arrivalAirportCode
                          carrierCode: carrierCode
                          basicFareCode: basicFareCode
                          departureDate: departureDate
                          departureAirportCode: departureAirportCode
                          flightNumber: flightNumber
                    type: merchantPurchaseData
                mutations:
                  - balance: 0
                    reserved: 1
                    currency: currency
                    received: 6
                  - balance: 0
                    reserved: 1
                    currency: currency
                    received: 6
                originalAmount:
                  currency: currency
                  value: 0
                bookingDate: 2000-01-23T04:56:07.000+00:00
                id: id
                arn: arn
                amountAdjustments:
                  - basepoints: 5
                    amount:
                      currency: currency
                      value: 0
                    amountAdjustmentType: atmMarkup
                  - basepoints: 5
                    amount:
                      currency: currency
                      value: 0
                    amountAdjustmentType: atmMarkup
                estimatedArrivalTime: 2000-01-23T04:56:07.000+00:00
                status: approvalPending
            direction: incoming
            eventId: eventId
            sequenceNumber: 7
            amount:
              currency: currency
              value: 0
            categoryData:
              priority: crossBorder
              type: bank
            creationDate: 2000-01-23T04:56:07.000+00:00
            paymentInstrument:
              reference: reference
              description: description
              id: id
              tokenType: tokenType
            directDebitInformation:
              dueDate: 2000-01-23T04:56:07.000+00:00
              mandateId: mandateId
              dateOfSignature: 2000-01-23T04:56:07.000+00:00
              sequenceType: sequenceType
            counterparty:
              balanceAccountId: balanceAccountId
              bankAccount:
                accountHolder:
                  reference: reference
                  firstName: firstName
                  lastName: lastName
                  address:
                    country: country
                    stateOrProvince: stateOrProvince
                    city: city
                    postalCode: postalCode
                    line2: line2
                    line1: line1
                  fullName: fullName
                  dateOfBirth: 2000-01-23
                  type: unknown
                accountIdentification:
                  bsbCode: bsbCode
                  accountNumber: accountNumber
                  type: auLocal
              merchant:
                country: country
                city: city
                merchantId: merchantId
                postalCode: postalCode
                name: name
                acquirerId: acquirerId
                mcc: mcc
              transferInstrumentId: transferInstrumentId
              card:
                cardHolder:
                  reference: reference
                  firstName: firstName
                  lastName: lastName
                  address:
                    country: country
                    stateOrProvince: stateOrProvince
                    city: city
                    postalCode: postalCode
                    line2: line2
                    line1: line1
                  fullName: fullName
                  dateOfBirth: 2000-01-23
                  type: unknown
                cardIdentification:
                  number: number
                  startMonth: startMonth
                  issueNumber: issueNumber
                  storedPaymentMethodId: storedPaymentMethodId
                  expiryMonth: expiryMonth
                  startYear: startYear
                  expiryYear: expiryYear
            category: bank
            balanceAccount:
              reference: reference
              description: description
              id: id
            status: approvalPending
          - reason: accountHierarchyNotActive
            description: description
            transactionRulesResult:
              score: 9
              advice: advice
              triggeredTransactionRules:
                - reason: reason
                  transactionRule:
                    outcomeType: outcomeType
                    reference: reference
                    score: 3
                    description: description
                    id: id
                  transactionRuleSource:
                    id: id
                    type: type
                - reason: reason
                  transactionRule:
                    outcomeType: outcomeType
                    reference: reference
                    score: 3
                    description: description
                    id: id
                  transactionRuleSource:
                    id: id
                    type: type
              allHardBlockRulesPassed: true
            type: payment
            tracking:
              type: confirmation
              status: credited
            balancePlatform: balancePlatform
            reference: reference
            accountHolder:
              reference: reference
              description: description
              id: id
            balances:
              - balance: 0
                reserved: 1
                currency: currency
                received: 6
              - balance: 0
                reserved: 1
                currency: currency
                received: 6
            referenceForBeneficiary: referenceForBeneficiary
            review:
              numberOfApprovalsRequired: 2
              scaOnApproval: completed
            id: id
            events:
              - reason: accountHierarchyNotActive
                amount:
                  currency: currency
                  value: 0
                updateDate: 2000-01-23T04:56:07.000+00:00
                valueDate: 2000-01-23T04:56:07.000+00:00
                type: accounting
                modification:
                  reference: reference
                  id: id
                  type: type
                  direction: direction
                  status: approvalPending
                transactionId: transactionId
                trackingData:
                  type: confirmation
                  status: credited
                externalReason:
                  code: code
                  namespace: namespace
                  description: description
                eventsData:
                  - lodging:
                      - numberOfNights: 5
                        checkInDate: checkInDate
                      - numberOfNights: 5
                        checkInDate: checkInDate
                    airline:
                      ticketNumber: ticketNumber
                      legs:
                        - arrivalAirportCode: arrivalAirportCode
                          carrierCode: carrierCode
                          basicFareCode: basicFareCode
                          departureDate: departureDate
                          departureAirportCode: departureAirportCode
                          flightNumber: flightNumber
                        - arrivalAirportCode: arrivalAirportCode
                          carrierCode: carrierCode
                          basicFareCode: basicFareCode
                          departureDate: departureDate
                          departureAirportCode: departureAirportCode
                          flightNumber: flightNumber
                    type: merchantPurchaseData
                  - lodging:
                      - numberOfNights: 5
                        checkInDate: checkInDate
                      - numberOfNights: 5
                        checkInDate: checkInDate
                    airline:
                      ticketNumber: ticketNumber
                      legs:
                        - arrivalAirportCode: arrivalAirportCode
                          carrierCode: carrierCode
                          basicFareCode: basicFareCode
                          departureDate: departureDate
                          departureAirportCode: departureAirportCode
                          flightNumber: flightNumber
                        - arrivalAirportCode: arrivalAirportCode
                          carrierCode: carrierCode
                          basicFareCode: basicFareCode
                          departureDate: departureDate
                          departureAirportCode: departureAirportCode
                          flightNumber: flightNumber
                    type: merchantPurchaseData
                mutations:
                  - balance: 0
                    reserved: 1
                    currency: currency
                    received: 6
                  - balance: 0
                    reserved: 1
                    currency: currency
                    received: 6
                originalAmount:
                  currency: currency
                  value: 0
                bookingDate: 2000-01-23T04:56:07.000+00:00
                id: id
                arn: arn
                amountAdjustments:
                  - basepoints: 5
                    amount:
                      currency: currency
                      value: 0
                    amountAdjustmentType: atmMarkup
                  - basepoints: 5
                    amount:
                      currency: currency
                      value: 0
                    amountAdjustmentType: atmMarkup
                estimatedArrivalTime: 2000-01-23T04:56:07.000+00:00
                status: approvalPending
              - reason: accountHierarchyNotActive
                amount:
                  currency: currency
                  value: 0
                updateDate: 2000-01-23T04:56:07.000+00:00
                valueDate: 2000-01-23T04:56:07.000+00:00
                type: accounting
                modification:
                  reference: reference
                  id: id
                  type: type
                  direction: direction
                  status: approvalPending
                transactionId: transactionId
                trackingData:
                  type: confirmation
                  status: credited
                externalReason:
                  code: code
                  namespace: namespace
                  description: description
                eventsData:
                  - lodging:
                      - numberOfNights: 5
                        checkInDate: checkInDate
                      - numberOfNights: 5
                        checkInDate: checkInDate
                    airline:
                      ticketNumber: ticketNumber
                      legs:
                        - arrivalAirportCode: arrivalAirportCode
                          carrierCode: carrierCode
                          basicFareCode: basicFareCode
                          departureDate: departureDate
                          departureAirportCode: departureAirportCode
                          flightNumber: flightNumber
                        - arrivalAirportCode: arrivalAirportCode
                          carrierCode: carrierCode
                          basicFareCode: basicFareCode
                          departureDate: departureDate
                          departureAirportCode: departureAirportCode
                          flightNumber: flightNumber
                    type: merchantPurchaseData
                  - lodging:
                      - numberOfNights: 5
                        checkInDate: checkInDate
                      - numberOfNights: 5
                        checkInDate: checkInDate
                    airline:
                      ticketNumber: ticketNumber
                      legs:
                        - arrivalAirportCode: arrivalAirportCode
                          carrierCode: carrierCode
                          basicFareCode: basicFareCode
                          departureDate: departureDate
                          departureAirportCode: departureAirportCode
                          flightNumber: flightNumber
                        - arrivalAirportCode: arrivalAirportCode
                          carrierCode: carrierCode
                          basicFareCode: basicFareCode
                          departureDate: departureDate
                          departureAirportCode: departureAirportCode
                          flightNumber: flightNumber
                    type: merchantPurchaseData
                mutations:
                  - balance: 0
                    reserved: 1
                    currency: currency
                    received: 6
                  - balance: 0
                    reserved: 1
                    currency: currency
                    received: 6
                originalAmount:
                  currency: currency
                  value: 0
                bookingDate: 2000-01-23T04:56:07.000+00:00
                id: id
                arn: arn
                amountAdjustments:
                  - basepoints: 5
                    amount:
                      currency: currency
                      value: 0
                    amountAdjustmentType: atmMarkup
                  - basepoints: 5
                    amount:
                      currency: currency
                      value: 0
                    amountAdjustmentType: atmMarkup
                estimatedArrivalTime: 2000-01-23T04:56:07.000+00:00
                status: approvalPending
            direction: incoming
            eventId: eventId
            sequenceNumber: 7
            amount:
              currency: currency
              value: 0
            categoryData:
              priority: crossBorder
              type: bank
            creationDate: 2000-01-23T04:56:07.000+00:00
            paymentInstrument:
              reference: reference
              description: description
              id: id
              tokenType: tokenType
            directDebitInformation:
              dueDate: 2000-01-23T04:56:07.000+00:00
              mandateId: mandateId
              dateOfSignature: 2000-01-23T04:56:07.000+00:00
              sequenceType: sequenceType
            counterparty:
              balanceAccountId: balanceAccountId
              bankAccount:
                accountHolder:
                  reference: reference
                  firstName: firstName
                  lastName: lastName
                  address:
                    country: country
                    stateOrProvince: stateOrProvince
                    city: city
                    postalCode: postalCode
                    line2: line2
                    line1: line1
                  fullName: fullName
                  dateOfBirth: 2000-01-23
                  type: unknown
                accountIdentification:
                  bsbCode: bsbCode
                  accountNumber: accountNumber
                  type: auLocal
              merchant:
                country: country
                city: city
                merchantId: merchantId
                postalCode: postalCode
                name: name
                acquirerId: acquirerId
                mcc: mcc
              transferInstrumentId: transferInstrumentId
              card:
                cardHolder:
                  reference: reference
                  firstName: firstName
                  lastName: lastName
                  address:
                    country: country
                    stateOrProvince: stateOrProvince
                    city: city
                    postalCode: postalCode
                    line2: line2
                    line1: line1
                  fullName: fullName
                  dateOfBirth: 2000-01-23
                  type: unknown
                cardIdentification:
                  number: number
                  startMonth: startMonth
                  issueNumber: issueNumber
                  storedPaymentMethodId: storedPaymentMethodId
                  expiryMonth: expiryMonth
                  startYear: startYear
                  expiryYear: expiryYear
            category: bank
            balanceAccount:
              reference: reference
              description: description
              id: id
            status: approvalPending
        _links:
          next:
            href: href
          prev:
            href: href
      properties:
        _links:
          $ref: '#/components/schemas/Links'
        data:
          description: Contains the transfers that match the query parameters.
          items:
            $ref: '#/components/schemas/TransferData'
          type: array
    HKLocalAccountIdentification:
      additionalProperties: false
      properties:
        accountNumber:
          description: "The 9- to 15-character bank account number (alphanumeric),\
            \ without separators or whitespace. Starts with the 3-digit branch code."
          maxLength: 15
          minLength: 9
          type: string
        clearingCode:
          description: "The 3-digit clearing code, without separators or whitespace."
          maxLength: 3
          minLength: 3
          type: string
        type:
          default: hkLocal
          description: '**hkLocal**'
          enum:
            - hkLocal
          type: string
      required:
        - accountNumber
        - clearingCode
        - type
    HULocalAccountIdentification:
      additionalProperties: false
      properties:
        accountNumber:
          description: "The 24-digit bank account number, without separators or whitespace."
          maxLength: 24
          minLength: 24
          type: string
        type:
          default: huLocal
          description: '**huLocal**'
          enum:
            - huLocal
          type: string
      required:
        - accountNumber
        - type
    IbanAccountIdentification:
      additionalProperties: false
      properties:
        iban:
          description: "The international bank account number as defined in the [ISO-13616](https://www.iso.org/standard/81090.html)\
            \ standard."
          type: string
        type:
          default: iban
          description: '**iban**'
          enum:
            - iban
          type: string
      required:
        - iban
        - type
    InternalCategoryData:
      additionalProperties: false
      properties:
        modificationMerchantReference:
          description: The capture's merchant reference included in the transfer.
          type: string
          x-addedInVersion: "4"
        modificationPspReference:
          description: The capture reference included in the transfer.
          type: string
          x-addedInVersion: "4"
        type:
          default: internal
          description: '**internal**'
          enum:
            - internal
          type: string
    InternalReviewTrackingData:
      additionalProperties: false
      properties:
        reason:
          description: "The reason why the transfer failed Adyen's internal review.\
            \ \n\nPossible values:\n\n- **refusedForRegulatoryReasons**: the transfer\
            \ does not comply with Adyen's risk policy. For more information, [contact\
            \ the Support Team](https://www.adyen.help/hc/en-us/requests/new). "
          enum:
            - refusedForRegulatoryReasons
          type: string
        status:
          description: |+
            The status of the transfer.

            Possible values:

             - **pending**: the transfer is under internal review.

            - **failed**: the transfer failed Adyen's internal review. For details, see `reason`.

          enum:
            - pending
            - failed
          type: string
        type:
          default: internalReview
          description: "The type of tracking event. \n\nPossible values: \n\n - **internalReview**:\
            \ the transfer was flagged because it does not comply with Adyen's risk\
            \ policy."
          enum:
            - internalReview
          type: string
      required:
        - status
        - type
    InvalidField:
      additionalProperties: false
      example:
        name: name
        message: message
        value: value
      properties:
        message:
          description: Description of the validation error.
          type: string
        name:
          description: The field that has an invalid value.
          type: string
        value:
          description: The invalid value.
          type: string
      required:
        - message
        - name
        - value
    IssuedCard:
      additionalProperties: false
      properties:
        authorisationType:
          description: "The authorisation type. For example, **defaultAuthorisation**,\
            \ **preAuthorisation**, **finalAuthorisation**"
          type: string
          x-addedInVersion: "4"
        panEntryMode:
          description: |-
            Indicates the method used for entering the PAN to initiate a transaction.

            Possible values: **manual**, **chip**, **magstripe**, **contactless**, **cof**, **ecommerce**, **token**.
          enum:
            - chip
            - cof
            - contactless
            - ecommerce
            - magstripe
            - manual
            - token
          type: string
          x-addedInVersion: "4"
        processingType:
          description: "Contains information about how the payment was processed.\
            \ For example, **ecommerce** for online or **pos** for in-person payments."
          enum:
            - atmWithdraw
            - balanceInquiry
            - ecommerce
            - moto
            - pos
            - purchaseWithCashback
            - recurring
            - token
          type: string
          x-addedInVersion: "4"
        relayedAuthorisationData:
          $ref: '#/components/schemas/RelayedAuthorisationData'
        schemeTraceId:
          description: "The identifier of the original payment. This ID is provided\
            \ by the scheme and can be alphanumeric or numeric, depending on the scheme.\
            \ The `schemeTraceID` should refer to an original `schemeUniqueTransactionID`\
            \ provided in an earlier payment (not necessarily processed by Adyen).\
            \ A `schemeTraceId` is typically available for authorization adjustments\
            \ or recurring payments."
          type: string
          x-addedInVersion: "4"
        schemeUniqueTransactionId:
          description: The unique identifier created by the scheme. This ID can be
            alphanumeric or numeric depending on the scheme.
          type: string
          x-addedInVersion: "4"
        type:
          default: issuedCard
          description: '**issuedCard**'
          enum:
            - issuedCard
          type: string
        validationFacts:
          description: "The evaluation of the validation facts. See [validation checks](https://docs.adyen.com/issuing/validation-checks)\
            \ for more information."
          items:
            $ref: '#/components/schemas/TransferNotificationValidationFact'
          type: array
          x-addedInVersion: "4"
    JSONObject:
      type: object
    Leg:
      additionalProperties: false
      example:
        arrivalAirportCode: arrivalAirportCode
        carrierCode: carrierCode
        basicFareCode: basicFareCode
        departureDate: departureDate
        departureAirportCode: departureAirportCode
        flightNumber: flightNumber
      properties:
        arrivalAirportCode:
          description: The IATA 3-letter airport code of the destination airport.
            This field is required if the airline data includes leg details.
          type: string
        basicFareCode:
          description: The basic fare code for this leg.
          type: string
        carrierCode:
          description: IATA code of the carrier operating the flight.
          type: string
        departureAirportCode:
          description: The IATA three-letter airport code of the departure airport.
            This field is required if the airline data includes leg details
          type: string
        departureDate:
          description: The flight departure date.
          type: string
        flightNumber:
          description: The flight identifier.
          type: string
    Link:
      additionalProperties: false
      example:
        href: href
      properties:
        href:
          description: The link to the resource.
          type: string
    Links:
      additionalProperties: false
      example:
        next:
          href: href
        prev:
          href: href
      properties:
        next:
          $ref: '#/components/schemas/Link'
        prev:
          $ref: '#/components/schemas/Link'
    Lodging:
      additionalProperties: false
      example:
        numberOfNights: 5
        checkInDate: checkInDate
      properties:
        checkInDate:
          description: The check-in date.
          type: string
        numberOfNights:
          description: The total number of nights the room is booked for.
          format: int32
          type: integer
    MerchantData:
      additionalProperties: false
      example:
        merchantId: merchantId
        postalCode: postalCode
        nameLocation:
          country: country
          city: city
          name: name
          countryOfOrigin: countryOfOrigin
          rawData: rawData
          state: state
        acquirerId: acquirerId
        mcc: mcc
      properties:
        acquirerId:
          description: The unique identifier of the merchant's acquirer.
          type: string
        mcc:
          description: The merchant category code.
          type: string
        merchantId:
          description: The unique identifier of the merchant.
          type: string
        nameLocation:
          $ref: '#/components/schemas/NameLocation'
        postalCode:
          description: The postal code of the merchant.
          type: string
    MerchantPurchaseData:
      additionalProperties: false
      example:
        lodging:
          - numberOfNights: 5
            checkInDate: checkInDate
          - numberOfNights: 5
            checkInDate: checkInDate
        airline:
          ticketNumber: ticketNumber
          legs:
            - arrivalAirportCode: arrivalAirportCode
              carrierCode: carrierCode
              basicFareCode: basicFareCode
              departureDate: departureDate
              departureAirportCode: departureAirportCode
              flightNumber: flightNumber
            - arrivalAirportCode: arrivalAirportCode
              carrierCode: carrierCode
              basicFareCode: basicFareCode
              departureDate: departureDate
              departureAirportCode: departureAirportCode
              flightNumber: flightNumber
        type: merchantPurchaseData
      properties:
        airline:
          $ref: '#/components/schemas/Airline'
        lodging:
          description: Lodging information.
          items:
            $ref: '#/components/schemas/Lodging'
          type: array
        type:
          default: merchantPurchaseData
          description: "The type of events data. \n\nPossible values: \n\n - **merchantPurchaseData**:\
            \ merchant purchase data"
          enum:
            - merchantPurchaseData
          type: string
      required:
        - type
    Modification:
      additionalProperties: false
      example:
        reference: reference
        id: id
        type: type
        direction: direction
        status: approvalPending
      properties:
        direction:
          description: The direction of the money movement.
          type: string
          x-addedInVersion: "3"
        id:
          description: Our reference for the modification.
          type: string
          x-addedInVersion: "3"
        reference:
          description: "Your reference for the modification, used internally within\
            \ your platform."
          type: string
          x-addedInVersion: "3"
        status:
          description: The status of the transfer event.
          enum:
            - approvalPending
            - atmWithdrawal
            - atmWithdrawalReversalPending
            - atmWithdrawalReversed
            - authAdjustmentAuthorised
            - authAdjustmentError
            - authAdjustmentRefused
            - authorised
            - bankTransfer
            - bankTransferPending
            - booked
            - bookingPending
            - cancelled
            - capturePending
            - captureReversalPending
            - captureReversed
            - captured
            - capturedExternally
            - chargeback
            - chargebackExternally
            - chargebackPending
            - chargebackReversalPending
            - chargebackReversed
            - credited
            - depositCorrection
            - depositCorrectionPending
            - dispute
            - disputeClosed
            - disputeExpired
            - disputeNeedsReview
            - error
            - expired
            - failed
            - fee
            - feePending
            - internalTransfer
            - internalTransferPending
            - invoiceDeduction
            - invoiceDeductionPending
            - manualCorrectionPending
            - manuallyCorrected
            - matchedStatement
            - matchedStatementPending
            - merchantPayin
            - merchantPayinPending
            - merchantPayinReversed
            - merchantPayinReversedPending
            - miscCost
            - miscCostPending
            - paymentCost
            - paymentCostPending
            - pendingApproval
            - pendingExecution
            - received
            - refundPending
            - refundReversalPending
            - refundReversed
            - refunded
            - refundedExternally
            - refused
            - rejected
            - reserveAdjustment
            - reserveAdjustmentPending
            - returned
            - secondChargeback
            - secondChargebackPending
            - undefined
          type: string
          x-addedInVersion: "3"
        type:
          description: The type of transfer modification.
          type: string
          x-addedInVersion: "3"
    NOLocalAccountIdentification:
      additionalProperties: false
      properties:
        accountNumber:
          description: "The 11-digit bank account number, without separators or whitespace."
          maxLength: 11
          minLength: 11
          type: string
        type:
          default: noLocal
          description: '**noLocal**'
          enum:
            - noLocal
          type: string
      required:
        - accountNumber
        - type
    NZLocalAccountIdentification:
      additionalProperties: false
      properties:
        accountNumber:
          description: "The 15-16 digit bank account number. The first 2 digits are\
            \ the bank number, the next 4 digits are the branch number, the next 7\
            \ digits are the account number, and the final 2-3 digits are the suffix."
          maxLength: 16
          minLength: 15
          type: string
        type:
          default: nzLocal
          description: '**nzLocal**'
          enum:
            - nzLocal
          type: string
      required:
        - accountNumber
        - type
    NameLocation:
      additionalProperties: false
      example:
        country: country
        city: city
        name: name
        countryOfOrigin: countryOfOrigin
        rawData: rawData
        state: state
      properties:
        city:
          description: The city where the merchant is located.
          type: string
        country:
          description: "The country where the merchant is located in [three-letter\
            \ country code](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-3) format."
          type: string
        countryOfOrigin:
          description: "The home country in [three-digit country code](https://en.wikipedia.org/wiki/ISO_3166-1_numeric)\
            \ format, used for government-controlled merchants such as embassies."
          type: string
        name:
          description: The name of the merchant's shop or service.
          type: string
        rawData:
          description: The raw data.
          type: string
        state:
          description: The state where the merchant is located.
          type: string
    NumberAndBicAccountIdentification:
      additionalProperties: false
      properties:
        accountNumber:
          description: "The bank account number, without separators or whitespace.\
            \ The length and format depends on the bank or country."
          maxLength: 34
          type: string
        additionalBankIdentification:
          $ref: '#/components/schemas/AdditionalBankIdentification'
        bic:
          description: The bank's 8- or 11-character BIC or SWIFT code.
          maxLength: 11
          minLength: 8
          type: string
        type:
          default: numberAndBic
          description: '**numberAndBic**'
          enum:
            - numberAndBic
          type: string
      required:
        - accountNumber
        - bic
        - type
    PLLocalAccountIdentification:
      additionalProperties: false
      properties:
        accountNumber:
          description: "The 26-digit bank account number ([Numer rachunku](https://pl.wikipedia.org/wiki/Numer_Rachunku_Bankowego)),\
            \ without separators or whitespace."
          maxLength: 26
          minLength: 26
          type: string
        type:
          default: plLocal
          description: '**plLocal**'
          enum:
            - plLocal
          type: string
      required:
        - accountNumber
        - type
    PartyIdentification:
      additionalProperties: false
      example:
        reference: reference
        firstName: firstName
        lastName: lastName
        address:
          country: country
          stateOrProvince: stateOrProvince
          city: city
          postalCode: postalCode
          line2: line2
          line1: line1
        fullName: fullName
        dateOfBirth: 2000-01-23
        type: unknown
      properties:
        address:
          $ref: '#/components/schemas/Address'
        dateOfBirth:
          description: |-
            The date of birth of the individual in [ISO-8601](https://www.w3.org/TR/NOTE-datetime) format. For example, **YYYY-MM-DD**.

            Allowed only when `type` is **individual**.
          format: date
          type: string
        firstName:
          description: |-
            The first name of the individual.

            Supported characters: [a-z] [A-Z] - . / — and space.

            This parameter is:
            - Allowed only when `type` is **individual**.
            - Required when `category` is **card**.
          type: string
        fullName:
          description: |-
            The full name of the entity that owns the bank account or card.

            Supported characters: [a-z] [A-Z] [0-9] , . ; : - — / \ + & ! ? @ ( ) " ' and space.

            Required when `category` is **bank**.
          type: string
        lastName:
          description: |-
            The last name of the individual.

            Supported characters: [a-z] [A-Z] - . / — and space.

            This parameter is:
            - Allowed only when `type` is **individual**.
            - Required when `category` is **card**.
          type: string
        reference:
          description: |-
            A unique reference to identify the party or counterparty involved in the transfer. For example, your client's unique wallet or payee ID.

            Required when you include `cardIdentification.storedPaymentMethodId`.
          maxLength: 150
          type: string
        type:
          default: unknown
          description: |-
            The type of entity that owns the bank account or card.

            Possible values: **individual**, **organization**, or **unknown**.

            Required when `category` is **card**. In this case, the value must be **individual**.
          enum:
            - individual
            - organization
            - unknown
          type: string
    PaymentInstrument:
      additionalProperties: false
      example:
        reference: reference
        description: description
        id: id
        tokenType: tokenType
      properties:
        description:
          description: The description of the resource.
          type: string
        id:
          description: The unique identifier of the resource.
          type: string
        reference:
          description: The reference for the resource.
          type: string
        tokenType:
          description: The type of wallet that the network token is associated with.
          type: string
          x-addedInVersion: "3"
    PlatformPayment:
      additionalProperties: false
      properties:
        modificationMerchantReference:
          description: The capture's merchant reference included in the transfer.
          type: string
          x-addedInVersion: "4"
        modificationPspReference:
          description: The capture reference included in the transfer.
          type: string
          x-addedInVersion: "4"
        paymentMerchantReference:
          description: The payment's merchant reference included in the transfer.
          type: string
          x-addedInVersion: "4"
        platformPaymentType:
          description: |-
            Specifies the nature of the transfer. This parameter helps categorize transfers so you can reconcile transactions at a later time, using the Balance Platform Accounting Report for [marketplaces](https://docs.adyen.com/marketplaces/reports-and-fees/balance-platform-accounting-report/) or [platforms](https://docs.adyen.com/platforms/reports-and-fees/balance-platform-accounting-report/).

            Possible values:

            * **AcquiringFees**: for the acquiring fee incurred on a transaction.

            * **AdyenCommission**: for the transaction fee due to Adyen under [blended rates](https://www.adyen.com/knowledge-hub/guides/payments-training-guide/get-the-best-from-your-card-processing).

            * **AdyenFees**: for all the transaction fees due to Adyen. This is the sum of Adyen's commission and Adyen's markup.

            * **AdyenMarkup**: for the transaction fee due to Adyen under [Interchange++ pricing](https://www.adyen.com/pricing).

            * **BalanceAccount**: or the sale amount of a transaction.

            * **Commission**: for your platform's commission on a transaction.

            * **DCCPlatformCommission**: for the DCC Commission for the platform on a transaction.

            * **Interchange**: for the interchange fee (fee paid to the issuer) incurred on a transaction.

            * **PaymentFee**: for all of the transaction fees.

            * **Remainder**: for the left over amount after currency conversion.

            * **SchemeFee**: for the scheme fee incurred on a transaction. This is the sum of the interchange fees and the acquiring fees.

            * **Surcharge**: for the surcharge paid by the customer on a transaction.

            * **Tip**: for the tip paid by the customer.

            * **TopUp**: for an incoming transfer to top up your user's balance account.

            * **VAT**: for the Value Added Tax.
          enum:
            - AcquiringFees
            - AdyenCommission
            - AdyenFees
            - AdyenMarkup
            - BalanceAccount
            - Commission
            - DCCPlatformCommission
            - Default
            - Interchange
            - PaymentFee
            - Remainder
            - SchemeFee
            - Surcharge
            - Tip
            - TopUp
            - VAT
          type: string
          x-addedInVersion: "4"
        pspPaymentReference:
          description: The payment reference included in the transfer.
          type: string
          x-addedInVersion: "4"
        type:
          default: platformPayment
          description: '**platformPayment**'
          enum:
            - platformPayment
          type: string
    RelayedAuthorisationData:
      additionalProperties: false
      properties:
        metadata:
          additionalProperties:
            type: string
          description: "Contains key-value pairs of your references and descriptions,\
            \ for example, `customId`:`your-own-custom-field-12345`."
          x-addedInVersion: "3"
        reference:
          description: Your reference for the relayed authorisation data.
          type: string
          x-addedInVersion: "3"
    Repayment:
      additionalProperties: false
      example:
        basisPoints: 5
        term:
          estimatedDays: 2
          maximumDays: 7
        threshold:
          amount:
            currency: currency
            value: 0
      properties:
        basisPoints:
          description: "The repayment that is deducted daily from incoming net volume,\
            \ in [basis points](https://www.investopedia.com/terms/b/basispoint.asp)."
          format: int32
          type: integer
        term:
          $ref: '#/components/schemas/RepaymentTerm'
        threshold:
          $ref: '#/components/schemas/ThresholdRepayment'
      required:
        - basisPoints
    RepaymentTerm:
      additionalProperties: false
      example:
        estimatedDays: 2
        maximumDays: 7
      properties:
        estimatedDays:
          description: "The estimated term for repaying the grant, in days."
          format: int32
          type: integer
        maximumDays:
          description: "The maximum term for repaying the grant, in days. Only applies\
            \ when `contractType` is **loan**."
          format: int32
          type: integer
      required:
        - estimatedDays
    ResourceReference:
      additionalProperties: false
      example:
        reference: reference
        description: description
        id: id
      properties:
        description:
          description: The description of the resource.
          type: string
        id:
          description: The unique identifier of the resource.
          type: string
        reference:
          description: The reference for the resource.
          type: string
    RestServiceError:
      additionalProperties: false
      example:
        instance: instance
        invalidFields:
          - name: name
            message: message
            value: value
          - name: name
            message: message
            value: value
        requestId: requestId
        response: "{}"
        errorCode: errorCode
        detail: detail
        title: title
        type: type
        status: 9
      properties:
        detail:
          description: A human-readable explanation specific to this occurrence of
            the problem.
          type: string
        errorCode:
          description: A code that identifies the problem type.
          type: string
        instance:
          description: A unique URI that identifies the specific occurrence of the
            problem.
          type: string
        invalidFields:
          description: "Detailed explanation of each validation error, when applicable."
          items:
            $ref: '#/components/schemas/InvalidField'
          type: array
        requestId:
          description: "A unique reference for the request, essentially the same as\
            \ `pspReference`."
          type: string
        response:
          type: object
        status:
          description: The HTTP status code.
          format: int32
          type: integer
        title:
          description: "A short, human-readable summary of the problem type."
          type: string
        type:
          description: "A URI that identifies the problem type, pointing to human-readable\
            \ documentation on this problem type."
          type: string
      required:
        - detail
        - errorCode
        - status
        - title
        - type
    ReturnTransferRequest:
      additionalProperties: false
      example:
        reference: reference
        amount:
          currency: currency
          value: 0
      properties:
        amount:
          $ref: '#/components/schemas/Amount'
        reference:
          description: |
            Your internal reference for the return. If you don't provide this in the request, Adyen generates a unique reference. This reference is used in all communication with you about the instruction status.

            We recommend using a unique value per instruction.
            If you need to provide multiple references for a transaction, separate them with hyphens ("-").
          maxLength: 80
          type: string
      required:
        - amount
    ReturnTransferResponse:
      additionalProperties: false
      example:
        reference: reference
        id: id
        transferId: transferId
        status: Authorised
      properties:
        id:
          description: The unique identifier of the return.
          type: string
        reference:
          description: Your internal reference for the return.
          type: string
        status:
          description: |-
            The resulting status of the return.

            Possible values: **Authorised**, **Declined**.
          enum:
            - Authorised
            - Declined
          type: string
        transferId:
          description: The unique identifier of the original transfer.
          type: string
    RoutingDetails:
      additionalProperties: false
      example:
        errorCode: errorCode
        detail: detail
        priority: crossBorder
        title: title
      properties:
        detail:
          description: A human-readable explanation specific to this occurrence of
            the problem.
          type: string
        errorCode:
          description: A code that identifies the problem type.
          type: string
        priority:
          description: |-
            The priority for the bank transfer. This sets the speed at which the transfer is sent and the fees that you have to pay. Required for transfers with `category` **bank**.

            Possible values:

            * **regular**: for normal, low-value transactions.

            * **fast**: a faster way to transfer funds, but the fees are higher. Recommended for high-priority, low-value transactions.

            * **wire**: the fastest way to transfer funds, but this has the highest fees. Recommended for high-priority, high-value transactions.

            * **instant**: for instant funds transfers in [SEPA countries](https://www.ecb.europa.eu/paym/integration/retail/sepa/html/index.en.html).

            * **crossBorder**: for high-value transfers to a recipient in a different country.

            * **internal**: for transfers to an Adyen-issued business bank account (by bank account number/IBAN).
          enum:
            - crossBorder
            - fast
            - instant
            - internal
            - regular
            - wire
          type: string
        title:
          description: "A short, human-readable summary of the problem type."
          type: string
    SELocalAccountIdentification:
      additionalProperties: false
      properties:
        accountNumber:
          description: "The 7- to 10-digit bank account number ([Bankkontonummer](https://sv.wikipedia.org/wiki/Bankkonto)),\
            \ without the clearing number, separators, or whitespace."
          maxLength: 10
          minLength: 7
          type: string
        clearingNumber:
          description: "The 4- to 5-digit clearing number ([Clearingnummer](https://sv.wikipedia.org/wiki/Clearingnummer)),\
            \ without separators or whitespace."
          maxLength: 5
          minLength: 4
          type: string
        type:
          default: seLocal
          description: '**seLocal**'
          enum:
            - seLocal
          type: string
      required:
        - accountNumber
        - clearingNumber
        - type
    SGLocalAccountIdentification:
      additionalProperties: false
      properties:
        accountNumber:
          description: "The 4- to 19-digit bank account number, without separators\
            \ or whitespace."
          maxLength: 19
          minLength: 4
          type: string
        bic:
          description: The bank's 8- or 11-character BIC or SWIFT code.
          maxLength: 11
          minLength: 8
          type: string
        type:
          default: sgLocal
          description: '**sgLocal**'
          enum:
            - sgLocal
          type: string
      required:
        - accountNumber
        - bic
    ServiceError:
      additionalProperties: false
      example:
        errorType: errorType
        errorCode: errorCode
        message: message
        pspReference: pspReference
        status: 0
      properties:
        errorCode:
          description: The error code mapped to the error message.
          type: string
        errorType:
          description: The category of the error.
          type: string
        message:
          description: A short explanation of the issue.
          type: string
        pspReference:
          description: The PSP reference of the payment.
          type: string
        status:
          description: The HTTP response status.
          format: int32
          type: integer
    ThresholdRepayment:
      additionalProperties: false
      example:
        amount:
          currency: currency
          value: 0
      properties:
        amount:
          $ref: '#/components/schemas/Amount'
      required:
        - amount
    Transaction:
      additionalProperties: false
      example:
        amount:
          currency: currency
          value: 0
        description: description
        valueDate: 2000-01-23T04:56:07.000+00:00
        creationDate: 2000-01-23T04:56:07.000+00:00
        paymentInstrument:
          reference: reference
          description: description
          id: id
          tokenType: tokenType
        balancePlatform: balancePlatform
        accountHolder:
          reference: reference
          description: description
          id: id
        referenceForBeneficiary: referenceForBeneficiary
        transfer:
          reference: reference
          categoryData:
            priority: crossBorder
            type: bank
          id: id
        bookingDate: 2000-01-23T04:56:07.000+00:00
        id: id
        balanceAccount:
          reference: reference
          description: description
          id: id
        status: booked
      properties:
        accountHolder:
          $ref: '#/components/schemas/ResourceReference'
        amount:
          $ref: '#/components/schemas/Amount'
        balanceAccount:
          $ref: '#/components/schemas/ResourceReference'
        balancePlatform:
          description: The unique identifier of the balance platform.
          type: string
          x-addedInVersion: "1"
        bookingDate:
          description: The date the transaction was booked into the balance account.
          format: date-time
          type: string
          x-addedInVersion: "1"
        creationDate:
          description: "The date and time when the event was triggered, in ISO 8601\
            \ extended format. For example, **2020-12-18T10:15:30+01:00**."
          format: date-time
          type: string
        description:
          description: The `description` from the `/transfers` request.
          type: string
          x-addedInVersion: "1"
        id:
          description: The unique identifier of the transaction.
          type: string
          x-addedInVersion: "1"
        paymentInstrument:
          $ref: '#/components/schemas/PaymentInstrument'
        referenceForBeneficiary:
          description: |-
            The reference sent to or received from the counterparty.

            * For outgoing funds, this is the [`referenceForBeneficiary`](https://docs.adyen.com/api-explorer/#/transfers/latest/post/transfers__resParam_referenceForBeneficiary) from the  [`/transfers`](https://docs.adyen.com/api-explorer/#/transfers/latest/post/transfers__reqParam_referenceForBeneficiary) request.

             * For incoming funds, this is the reference from the sender.
          type: string
          x-addedInVersion: "1"
        status:
          description: |+
            The status of the transaction.

             Possible values:

            * **pending**: The transaction is still pending.

            * **booked**: The transaction has been booked to the balance account.

          enum:
            - booked
            - pending
          type: string
          x-addedInVersion: "1"
        transfer:
          $ref: '#/components/schemas/TransferView'
        valueDate:
          description: The date the transfer amount becomes available in the balance
            account.
          format: date-time
          type: string
          x-addedInVersion: "1"
      required:
        - accountHolder
        - amount
        - balanceAccount
        - balancePlatform
        - bookingDate
        - id
        - status
        - valueDate
    TransactionEventViolation:
      additionalProperties: false
      example:
        reason: reason
        transactionRule:
          outcomeType: outcomeType
          reference: reference
          score: 3
          description: description
          id: id
        transactionRuleSource:
          id: id
          type: type
      properties:
        reason:
          description: An explanation about why the transaction rule failed.
          type: string
        transactionRule:
          $ref: '#/components/schemas/TransactionRuleReference'
        transactionRuleSource:
          $ref: '#/components/schemas/TransactionRuleSource'
    TransactionRuleReference:
      additionalProperties: false
      example:
        outcomeType: outcomeType
        reference: reference
        score: 3
        description: description
        id: id
      properties:
        description:
          description: The description of the resource.
          type: string
        id:
          description: The unique identifier of the resource.
          type: string
        outcomeType:
          description: The outcome type of the rule.
          type: string
          x-addedInVersion: "4"
        reference:
          description: The reference for the resource.
          type: string
        score:
          description: The score of the rule in case it's a scoreBased rule.
          format: int32
          type: integer
          x-addedInVersion: "4"
    TransactionRuleSource:
      additionalProperties: false
      example:
        id: id
        type: type
      properties:
        id:
          description: "ID of the resource, when applicable."
          type: string
        type:
          description: |-
            Indicates the type of resource for which the transaction rule is defined.

            Possible values:

             * **PaymentInstrumentGroup**

            * **PaymentInstrument**

            * **BalancePlatform**

            * **EntityUsageConfiguration**

            * **PlatformRule**: The transaction rule is a platform-wide rule imposed by Adyen.
          type: string
    TransactionRulesResult:
      additionalProperties: false
      example:
        score: 9
        advice: advice
        triggeredTransactionRules:
          - reason: reason
            transactionRule:
              outcomeType: outcomeType
              reference: reference
              score: 3
              description: description
              id: id
            transactionRuleSource:
              id: id
              type: type
          - reason: reason
            transactionRule:
              outcomeType: outcomeType
              reference: reference
              score: 3
              description: description
              id: id
            transactionRuleSource:
              id: id
              type: type
        allHardBlockRulesPassed: true
      properties:
        advice:
          description: The advice given by the Risk analysis.
          type: string
        allHardBlockRulesPassed:
          description: Indicates whether the transaction passed the evaluation for
            all hardblock rules
          type: boolean
          x-addedInVersion: "4"
        score:
          description: The score of the Risk analysis.
          format: int32
          type: integer
        triggeredTransactionRules:
          description: Array containing all the transaction rules that the transaction
            triggered.
          items:
            $ref: '#/components/schemas/TransactionEventViolation'
          type: array
          x-addedInVersion: "4"
    TransactionSearchResponse:
      additionalProperties: false
      example:
        data:
          - amount:
              currency: currency
              value: 0
            description: description
            valueDate: 2000-01-23T04:56:07.000+00:00
            creationDate: 2000-01-23T04:56:07.000+00:00
            paymentInstrument:
              reference: reference
              description: description
              id: id
              tokenType: tokenType
            balancePlatform: balancePlatform
            accountHolder:
              reference: reference
              description: description
              id: id
            referenceForBeneficiary: referenceForBeneficiary
            transfer:
              reference: reference
              categoryData:
                priority: crossBorder
                type: bank
              id: id
            bookingDate: 2000-01-23T04:56:07.000+00:00
            id: id
            balanceAccount:
              reference: reference
              description: description
              id: id
            status: booked
          - amount:
              currency: currency
              value: 0
            description: description
            valueDate: 2000-01-23T04:56:07.000+00:00
            creationDate: 2000-01-23T04:56:07.000+00:00
            paymentInstrument:
              reference: reference
              description: description
              id: id
              tokenType: tokenType
            balancePlatform: balancePlatform
            accountHolder:
              reference: reference
              description: description
              id: id
            referenceForBeneficiary: referenceForBeneficiary
            transfer:
              reference: reference
              categoryData:
                priority: crossBorder
                type: bank
              id: id
            bookingDate: 2000-01-23T04:56:07.000+00:00
            id: id
            balanceAccount:
              reference: reference
              description: description
              id: id
            status: booked
        _links:
          next:
            href: href
          prev:
            href: href
      properties:
        _links:
          $ref: '#/components/schemas/Links'
        data:
          description: Contains the transactions that match the query parameters.
          items:
            $ref: '#/components/schemas/Transaction'
          type: array
    Transfer:
      additionalProperties: false
      example:
        reason: accountHierarchyNotActive
        amount:
          currency: currency
          value: 0
        categoryData:
          priority: crossBorder
          type: bank
        description: description
        creationDate: 2000-01-23T04:56:07.000+00:00
        paymentInstrument:
          reference: reference
          description: description
          id: id
          tokenType: tokenType
        type: payment
        reference: reference
        accountHolder:
          reference: reference
          description: description
          id: id
        directDebitInformation:
          dueDate: 2000-01-23T04:56:07.000+00:00
          mandateId: mandateId
          dateOfSignature: 2000-01-23T04:56:07.000+00:00
          sequenceType: sequenceType
        referenceForBeneficiary: referenceForBeneficiary
        review:
          numberOfApprovalsRequired: 2
          scaOnApproval: completed
        counterparty:
          balanceAccountId: balanceAccountId
          bankAccount:
            accountHolder:
              reference: reference
              firstName: firstName
              lastName: lastName
              address:
                country: country
                stateOrProvince: stateOrProvince
                city: city
                postalCode: postalCode
                line2: line2
                line1: line1
              fullName: fullName
              dateOfBirth: 2000-01-23
              type: unknown
            accountIdentification:
              bsbCode: bsbCode
              accountNumber: accountNumber
              type: auLocal
          merchant:
            merchantId: merchantId
            postalCode: postalCode
            nameLocation:
              country: country
              city: city
              name: name
              countryOfOrigin: countryOfOrigin
              rawData: rawData
              state: state
            acquirerId: acquirerId
            mcc: mcc
          transferInstrumentId: transferInstrumentId
          card:
            cardHolder:
              reference: reference
              firstName: firstName
              lastName: lastName
              address:
                country: country
                stateOrProvince: stateOrProvince
                city: city
                postalCode: postalCode
                line2: line2
                line1: line1
              fullName: fullName
              dateOfBirth: 2000-01-23
              type: unknown
            cardIdentification:
              number: number
              startMonth: startMonth
              issueNumber: issueNumber
              storedPaymentMethodId: storedPaymentMethodId
              expiryMonth: expiryMonth
              startYear: startYear
              expiryYear: expiryYear
        id: id
        category: bank
        balanceAccount:
          reference: reference
          description: description
          id: id
        direction: incoming
        status: approvalPending
      properties:
        accountHolder:
          $ref: '#/components/schemas/ResourceReference'
        amount:
          $ref: '#/components/schemas/Amount'
        balanceAccount:
          $ref: '#/components/schemas/ResourceReference'
        category:
          description: |-
            The category of the transfer.

            Possible values:

             - **bank**: a transfer involving a [transfer instrument](https://docs.adyen.com/api-explorer/#/legalentity/latest/post/transferInstruments__resParam_id) or a bank account.

            - **card**: a transfer involving a third-party card.

            - **internal**: a transfer between [balance accounts](https://docs.adyen.com/api-explorer/#/balanceplatform/latest/post/balanceAccounts__resParam_id) within your platform.

            - **issuedCard**: a transfer initiated by a Adyen-issued card.

            - **platformPayment**: funds movements related to payments that are acquired for your users.

            - **topUp**: an incoming transfer initiated by your user to top up their balance account.
          enum:
            - bank
            - card
            - internal
            - issuedCard
            - platformPayment
            - topUp
          type: string
          x-addedInVersion: "3"
        categoryData:
          $ref: '#/components/schemas/Transfer_categoryData'
        counterparty:
          $ref: '#/components/schemas/CounterpartyV3'
        creationDate:
          description: "The date and time when the event was triggered, in ISO 8601\
            \ extended format. For example, **2020-12-18T10:15:30+01:00**."
          format: date-time
          type: string
          x-addedInVersion: "3"
        description:
          description: |-
            Your description for the transfer. It is used by most banks as the transfer description. We recommend sending a maximum of 140 characters, otherwise the description may be truncated.

            Supported characters: **[a-z] [A-Z] [0-9] / - ?** **: ( ) . , ' + Space**

            Supported characters for **regular** and **fast** transfers to a US counterparty: **[a-z] [A-Z] [0-9] & $ % # @** **~ = + - _ ' " ! ?**
          type: string
          x-addedInVersion: "1"
        directDebitInformation:
          $ref: '#/components/schemas/DirectDebitInformation'
        direction:
          description: |-
            The direction of the transfer.

            Possible values: **incoming**, **outgoing**.
          enum:
            - incoming
            - outgoing
          type: string
          x-addedInVersion: "2"
        id:
          description: The ID of the resource.
          type: string
        paymentInstrument:
          $ref: '#/components/schemas/PaymentInstrument'
        reason:
          description: Additional information about the status of the transfer.
          enum:
            - accountHierarchyNotActive
            - amountLimitExceeded
            - approved
            - balanceAccountTemporarilyBlockedByTransactionRule
            - counterpartyAccountBlocked
            - counterpartyAccountClosed
            - counterpartyAccountNotFound
            - counterpartyAddressRequired
            - counterpartyBankTimedOut
            - counterpartyBankUnavailable
            - declined
            - declinedByTransactionRule
            - directDebitNotSupported
            - error
            - notEnoughBalance
            - pending
            - pendingApproval
            - pendingExecution
            - refusedByCounterpartyBank
            - refusedByCustomer
            - routeNotFound
            - scaFailed
            - transferInstrumentDoesNotExist
            - unknown
          type: string
          x-addedInVersion: "2"
        reference:
          description: "Your reference for the transfer, used internally within your\
            \ platform. If you don't provide this in the request, Adyen generates\
            \ a unique reference."
          maxLength: 80
          type: string
          x-addedInVersion: "2"
        referenceForBeneficiary:
          description: |2-
             A reference that is sent to the recipient. This reference is also sent in all webhooks related to the transfer, so you can use it to track statuses for both the source and recipient of funds.

             Supported characters: **a-z**, **A-Z**, **0-9**.The maximum length depends on the `category`.

             - **internal**: 80 characters

            - **bank**: 35 characters when transferring to an IBAN, 15 characters for others.
          type: string
          x-addedInVersion: "2"
        review:
          $ref: '#/components/schemas/TransferReview'
        status:
          description: |-
            The result of the transfer.

             For example, **authorised**, **refused**, or **error**.
          enum:
            - approvalPending
            - atmWithdrawal
            - atmWithdrawalReversalPending
            - atmWithdrawalReversed
            - authAdjustmentAuthorised
            - authAdjustmentError
            - authAdjustmentRefused
            - authorised
            - bankTransfer
            - bankTransferPending
            - booked
            - bookingPending
            - cancelled
            - capturePending
            - captureReversalPending
            - captureReversed
            - captured
            - capturedExternally
            - chargeback
            - chargebackExternally
            - chargebackPending
            - chargebackReversalPending
            - chargebackReversed
            - credited
            - depositCorrection
            - depositCorrectionPending
            - dispute
            - disputeClosed
            - disputeExpired
            - disputeNeedsReview
            - error
            - expired
            - failed
            - fee
            - feePending
            - internalTransfer
            - internalTransferPending
            - invoiceDeduction
            - invoiceDeductionPending
            - manualCorrectionPending
            - manuallyCorrected
            - matchedStatement
            - matchedStatementPending
            - merchantPayin
            - merchantPayinPending
            - merchantPayinReversed
            - merchantPayinReversedPending
            - miscCost
            - miscCostPending
            - paymentCost
            - paymentCostPending
            - pendingApproval
            - pendingExecution
            - received
            - refundPending
            - refundReversalPending
            - refundReversed
            - refunded
            - refundedExternally
            - refused
            - rejected
            - reserveAdjustment
            - reserveAdjustmentPending
            - returned
            - secondChargeback
            - secondChargebackPending
            - undefined
          type: string
          x-addedInVersion: "2"
        type:
          description: "The type of transfer or transaction. For example, **refund**,\
            \ **payment**, **internalTransfer**, **bankTransfer**."
          enum:
            - payment
            - capture
            - captureReversal
            - refund
            - refundReversal
            - chargeback
            - chargebackCorrection
            - chargebackReversal
            - chargebackReversalCorrection
            - secondChargeback
            - secondChargebackCorrection
            - atmWithdrawal
            - atmWithdrawalReversal
            - internalTransfer
            - internalDirectDebit
            - manualCorrection
            - invoiceDeduction
            - depositCorrection
            - reserveAdjustment
            - bankTransfer
            - bankDirectDebit
            - cardTransfer
            - miscCost
            - paymentCost
            - fee
            - leftover
            - grant
            - capitalFundsCollection
            - cashOutInstruction
            - cashoutFee
            - cashoutRepayment
            - cashoutFunding
            - repayment
            - installment
            - installmentReversal
            - balanceAdjustment
            - balanceRollover
            - balanceMigration
          type: string
          x-addedInVersion: "3"
      required:
        - amount
        - category
        - counterparty
        - status
    TransferData:
      additionalProperties: false
      example:
        reason: accountHierarchyNotActive
        description: description
        transactionRulesResult:
          score: 9
          advice: advice
          triggeredTransactionRules:
            - reason: reason
              transactionRule:
                outcomeType: outcomeType
                reference: reference
                score: 3
                description: description
                id: id
              transactionRuleSource:
                id: id
                type: type
            - reason: reason
              transactionRule:
                outcomeType: outcomeType
                reference: reference
                score: 3
                description: description
                id: id
              transactionRuleSource:
                id: id
                type: type
          allHardBlockRulesPassed: true
        type: payment
        tracking:
          type: confirmation
          status: credited
        balancePlatform: balancePlatform
        reference: reference
        accountHolder:
          reference: reference
          description: description
          id: id
        balances:
          - balance: 0
            reserved: 1
            currency: currency
            received: 6
          - balance: 0
            reserved: 1
            currency: currency
            received: 6
        referenceForBeneficiary: referenceForBeneficiary
        review:
          numberOfApprovalsRequired: 2
          scaOnApproval: completed
        id: id
        events:
          - reason: accountHierarchyNotActive
            amount:
              currency: currency
              value: 0
            updateDate: 2000-01-23T04:56:07.000+00:00
            valueDate: 2000-01-23T04:56:07.000+00:00
            type: accounting
            modification:
              reference: reference
              id: id
              type: type
              direction: direction
              status: approvalPending
            transactionId: transactionId
            trackingData:
              type: confirmation
              status: credited
            externalReason:
              code: code
              namespace: namespace
              description: description
            eventsData:
              - lodging:
                  - numberOfNights: 5
                    checkInDate: checkInDate
                  - numberOfNights: 5
                    checkInDate: checkInDate
                airline:
                  ticketNumber: ticketNumber
                  legs:
                    - arrivalAirportCode: arrivalAirportCode
                      carrierCode: carrierCode
                      basicFareCode: basicFareCode
                      departureDate: departureDate
                      departureAirportCode: departureAirportCode
                      flightNumber: flightNumber
                    - arrivalAirportCode: arrivalAirportCode
                      carrierCode: carrierCode
                      basicFareCode: basicFareCode
                      departureDate: departureDate
                      departureAirportCode: departureAirportCode
                      flightNumber: flightNumber
                type: merchantPurchaseData
              - lodging:
                  - numberOfNights: 5
                    checkInDate: checkInDate
                  - numberOfNights: 5
                    checkInDate: checkInDate
                airline:
                  ticketNumber: ticketNumber
                  legs:
                    - arrivalAirportCode: arrivalAirportCode
                      carrierCode: carrierCode
                      basicFareCode: basicFareCode
                      departureDate: departureDate
                      departureAirportCode: departureAirportCode
                      flightNumber: flightNumber
                    - arrivalAirportCode: arrivalAirportCode
                      carrierCode: carrierCode
                      basicFareCode: basicFareCode
                      departureDate: departureDate
                      departureAirportCode: departureAirportCode
                      flightNumber: flightNumber
                type: merchantPurchaseData
            mutations:
              - balance: 0
                reserved: 1
                currency: currency
                received: 6
              - balance: 0
                reserved: 1
                currency: currency
                received: 6
            originalAmount:
              currency: currency
              value: 0
            bookingDate: 2000-01-23T04:56:07.000+00:00
            id: id
            arn: arn
            amountAdjustments:
              - basepoints: 5
                amount:
                  currency: currency
                  value: 0
                amountAdjustmentType: atmMarkup
              - basepoints: 5
                amount:
                  currency: currency
                  value: 0
                amountAdjustmentType: atmMarkup
            estimatedArrivalTime: 2000-01-23T04:56:07.000+00:00
            status: approvalPending
          - reason: accountHierarchyNotActive
            amount:
              currency: currency
              value: 0
            updateDate: 2000-01-23T04:56:07.000+00:00
            valueDate: 2000-01-23T04:56:07.000+00:00
            type: accounting
            modification:
              reference: reference
              id: id
              type: type
              direction: direction
              status: approvalPending
            transactionId: transactionId
            trackingData:
              type: confirmation
              status: credited
            externalReason:
              code: code
              namespace: namespace
              description: description
            eventsData:
              - lodging:
                  - numberOfNights: 5
                    checkInDate: checkInDate
                  - numberOfNights: 5
                    checkInDate: checkInDate
                airline:
                  ticketNumber: ticketNumber
                  legs:
                    - arrivalAirportCode: arrivalAirportCode
                      carrierCode: carrierCode
                      basicFareCode: basicFareCode
                      departureDate: departureDate
                      departureAirportCode: departureAirportCode
                      flightNumber: flightNumber
                    - arrivalAirportCode: arrivalAirportCode
                      carrierCode: carrierCode
                      basicFareCode: basicFareCode
                      departureDate: departureDate
                      departureAirportCode: departureAirportCode
                      flightNumber: flightNumber
                type: merchantPurchaseData
              - lodging:
                  - numberOfNights: 5
                    checkInDate: checkInDate
                  - numberOfNights: 5
                    checkInDate: checkInDate
                airline:
                  ticketNumber: ticketNumber
                  legs:
                    - arrivalAirportCode: arrivalAirportCode
                      carrierCode: carrierCode
                      basicFareCode: basicFareCode
                      departureDate: departureDate
                      departureAirportCode: departureAirportCode
                      flightNumber: flightNumber
                    - arrivalAirportCode: arrivalAirportCode
                      carrierCode: carrierCode
                      basicFareCode: basicFareCode
                      departureDate: departureDate
                      departureAirportCode: departureAirportCode
                      flightNumber: flightNumber
                type: merchantPurchaseData
            mutations:
              - balance: 0
                reserved: 1
                currency: currency
                received: 6
              - balance: 0
                reserved: 1
                currency: currency
                received: 6
            originalAmount:
              currency: currency
              value: 0
            bookingDate: 2000-01-23T04:56:07.000+00:00
            id: id
            arn: arn
            amountAdjustments:
              - basepoints: 5
                amount:
                  currency: currency
                  value: 0
                amountAdjustmentType: atmMarkup
              - basepoints: 5
                amount:
                  currency: currency
                  value: 0
                amountAdjustmentType: atmMarkup
            estimatedArrivalTime: 2000-01-23T04:56:07.000+00:00
            status: approvalPending
        direction: incoming
        eventId: eventId
        sequenceNumber: 7
        amount:
          currency: currency
          value: 0
        categoryData:
          priority: crossBorder
          type: bank
        creationDate: 2000-01-23T04:56:07.000+00:00
        paymentInstrument:
          reference: reference
          description: description
          id: id
          tokenType: tokenType
        directDebitInformation:
          dueDate: 2000-01-23T04:56:07.000+00:00
          mandateId: mandateId
          dateOfSignature: 2000-01-23T04:56:07.000+00:00
          sequenceType: sequenceType
        counterparty:
          balanceAccountId: balanceAccountId
          bankAccount:
            accountHolder:
              reference: reference
              firstName: firstName
              lastName: lastName
              address:
                country: country
                stateOrProvince: stateOrProvince
                city: city
                postalCode: postalCode
                line2: line2
                line1: line1
              fullName: fullName
              dateOfBirth: 2000-01-23
              type: unknown
            accountIdentification:
              bsbCode: bsbCode
              accountNumber: accountNumber
              type: auLocal
          merchant:
            country: country
            city: city
            merchantId: merchantId
            postalCode: postalCode
            name: name
            acquirerId: acquirerId
            mcc: mcc
          transferInstrumentId: transferInstrumentId
          card:
            cardHolder:
              reference: reference
              firstName: firstName
              lastName: lastName
              address:
                country: country
                stateOrProvince: stateOrProvince
                city: city
                postalCode: postalCode
                line2: line2
                line1: line1
              fullName: fullName
              dateOfBirth: 2000-01-23
              type: unknown
            cardIdentification:
              number: number
              startMonth: startMonth
              issueNumber: issueNumber
              storedPaymentMethodId: storedPaymentMethodId
              expiryMonth: expiryMonth
              startYear: startYear
              expiryYear: expiryYear
        category: bank
        balanceAccount:
          reference: reference
          description: description
          id: id
        status: approvalPending
      properties:
        accountHolder:
          $ref: '#/components/schemas/ResourceReference'
        amount:
          $ref: '#/components/schemas/Amount'
        balanceAccount:
          $ref: '#/components/schemas/ResourceReference'
        balancePlatform:
          description: The unique identifier of the balance platform.
          type: string
        balances:
          description: The list of the latest balance statuses in the transfer.
          items:
            $ref: '#/components/schemas/BalanceMutation'
          type: array
          x-addedInVersion: "3"
        category:
          description: |-
            The category of the transfer.

            Possible values:

             - **bank**: a transfer involving a [transfer instrument](https://docs.adyen.com/api-explorer/#/legalentity/latest/post/transferInstruments__resParam_id) or a bank account.

            - **card**: a transfer involving a third-party card.

            - **internal**: a transfer between [balance accounts](https://docs.adyen.com/api-explorer/#/balanceplatform/latest/post/balanceAccounts__resParam_id) within your platform.

            - **issuedCard**: a transfer initiated by a Adyen-issued card.

            - **platformPayment**: funds movements related to payments that are acquired for your users.

            - **topUp**: an incoming transfer initiated by your user to top up their balance account.
          enum:
            - bank
            - card
            - internal
            - issuedCard
            - platformPayment
            - topUp
          type: string
          x-addedInVersion: "3"
        categoryData:
          $ref: '#/components/schemas/Transfer_categoryData'
        counterparty:
          $ref: '#/components/schemas/TransferNotificationCounterParty'
        creationDate:
          description: "The date and time when the event was triggered, in ISO 8601\
            \ extended format. For example, **2020-12-18T10:15:30+01:00**."
          format: date-time
          type: string
          x-addedInVersion: "3"
        description:
          description: |-
            Your description for the transfer. It is used by most banks as the transfer description. We recommend sending a maximum of 140 characters, otherwise the description may be truncated.

            Supported characters: **[a-z] [A-Z] [0-9] / - ?** **: ( ) . , ' + Space**

            Supported characters for **regular** and **fast** transfers to a US counterparty: **[a-z] [A-Z] [0-9] & $ % # @** **~ = + - _ ' " ! ?**
          type: string
          x-addedInVersion: "1"
        directDebitInformation:
          $ref: '#/components/schemas/DirectDebitInformation'
        direction:
          description: |-
            The direction of the transfer.

            Possible values: **incoming**, **outgoing**.
          enum:
            - incoming
            - outgoing
          type: string
          x-addedInVersion: "2"
        eventId:
          description: The unique identifier of the latest transfer event. Included
            only when the `category` is **issuedCard**.
          type: string
          x-addedInVersion: "4"
        events:
          description: The list of events leading up to the current status of the
            transfer.
          items:
            $ref: '#/components/schemas/TransferEvent'
          type: array
          x-addedInVersion: "3"
        id:
          description: The ID of the resource.
          type: string
        paymentInstrument:
          $ref: '#/components/schemas/PaymentInstrument'
        reason:
          description: Additional information about the status of the transfer.
          enum:
            - accountHierarchyNotActive
            - amountLimitExceeded
            - approved
            - balanceAccountTemporarilyBlockedByTransactionRule
            - counterpartyAccountBlocked
            - counterpartyAccountClosed
            - counterpartyAccountNotFound
            - counterpartyAddressRequired
            - counterpartyBankTimedOut
            - counterpartyBankUnavailable
            - declined
            - declinedByTransactionRule
            - directDebitNotSupported
            - error
            - notEnoughBalance
            - pending
            - pendingApproval
            - pendingExecution
            - refusedByCounterpartyBank
            - refusedByCustomer
            - routeNotFound
            - scaFailed
            - transferInstrumentDoesNotExist
            - unknown
          type: string
          x-addedInVersion: "2"
        reference:
          description: "Your reference for the transfer, used internally within your\
            \ platform. If you don't provide this in the request, Adyen generates\
            \ a unique reference."
          maxLength: 80
          type: string
          x-addedInVersion: "2"
        referenceForBeneficiary:
          description: |2-
             A reference that is sent to the recipient. This reference is also sent in all webhooks related to the transfer, so you can use it to track statuses for both the source and recipient of funds.

             Supported characters: **a-z**, **A-Z**, **0-9**.The maximum length depends on the `category`.

             - **internal**: 80 characters

            - **bank**: 35 characters when transferring to an IBAN, 15 characters for others.
          type: string
          x-addedInVersion: "2"
        review:
          $ref: '#/components/schemas/TransferReview'
        sequenceNumber:
          description: |-
            The sequence number of the transfer webhook. The numbers start from 1 and increase with each new webhook for a specific transfer.

            The sequence number can help you restore the correct sequence of events even if they arrive out of order.
          format: int32
          type: integer
          x-addedInVersion: "3"
        status:
          description: |-
            The result of the transfer.

             For example, **authorised**, **refused**, or **error**.
          enum:
            - approvalPending
            - atmWithdrawal
            - atmWithdrawalReversalPending
            - atmWithdrawalReversed
            - authAdjustmentAuthorised
            - authAdjustmentError
            - authAdjustmentRefused
            - authorised
            - bankTransfer
            - bankTransferPending
            - booked
            - bookingPending
            - cancelled
            - capturePending
            - captureReversalPending
            - captureReversed
            - captured
            - capturedExternally
            - chargeback
            - chargebackExternally
            - chargebackPending
            - chargebackReversalPending
            - chargebackReversed
            - credited
            - depositCorrection
            - depositCorrectionPending
            - dispute
            - disputeClosed
            - disputeExpired
            - disputeNeedsReview
            - error
            - expired
            - failed
            - fee
            - feePending
            - internalTransfer
            - internalTransferPending
            - invoiceDeduction
            - invoiceDeductionPending
            - manualCorrectionPending
            - manuallyCorrected
            - matchedStatement
            - matchedStatementPending
            - merchantPayin
            - merchantPayinPending
            - merchantPayinReversed
            - merchantPayinReversedPending
            - miscCost
            - miscCostPending
            - paymentCost
            - paymentCostPending
            - pendingApproval
            - pendingExecution
            - received
            - refundPending
            - refundReversalPending
            - refundReversed
            - refunded
            - refundedExternally
            - refused
            - rejected
            - reserveAdjustment
            - reserveAdjustmentPending
            - returned
            - secondChargeback
            - secondChargebackPending
            - undefined
          type: string
          x-addedInVersion: "2"
        tracking:
          $ref: '#/components/schemas/TransferData_tracking'
        transactionRulesResult:
          $ref: '#/components/schemas/TransactionRulesResult'
        type:
          description: "The type of transfer or transaction. For example, **refund**,\
            \ **payment**, **internalTransfer**, **bankTransfer**."
          enum:
            - payment
            - capture
            - captureReversal
            - refund
            - refundReversal
            - chargeback
            - chargebackCorrection
            - chargebackReversal
            - chargebackReversalCorrection
            - secondChargeback
            - secondChargebackCorrection
            - atmWithdrawal
            - atmWithdrawalReversal
            - internalTransfer
            - internalDirectDebit
            - manualCorrection
            - invoiceDeduction
            - depositCorrection
            - reserveAdjustment
            - bankTransfer
            - bankDirectDebit
            - cardTransfer
            - miscCost
            - paymentCost
            - fee
            - leftover
            - grant
            - capitalFundsCollection
            - cashOutInstruction
            - cashoutFee
            - cashoutRepayment
            - cashoutFunding
            - repayment
            - installment
            - installmentReversal
            - balanceAdjustment
            - balanceRollover
            - balanceMigration
          type: string
          x-addedInVersion: "3"
      required:
        - amount
        - category
        - status
    TransferEvent:
      additionalProperties: false
      example:
        reason: accountHierarchyNotActive
        amount:
          currency: currency
          value: 0
        updateDate: 2000-01-23T04:56:07.000+00:00
        valueDate: 2000-01-23T04:56:07.000+00:00
        type: accounting
        modification:
          reference: reference
          id: id
          type: type
          direction: direction
          status: approvalPending
        transactionId: transactionId
        trackingData:
          type: confirmation
          status: credited
        externalReason:
          code: code
          namespace: namespace
          description: description
        eventsData:
          - lodging:
              - numberOfNights: 5
                checkInDate: checkInDate
              - numberOfNights: 5
                checkInDate: checkInDate
            airline:
              ticketNumber: ticketNumber
              legs:
                - arrivalAirportCode: arrivalAirportCode
                  carrierCode: carrierCode
                  basicFareCode: basicFareCode
                  departureDate: departureDate
                  departureAirportCode: departureAirportCode
                  flightNumber: flightNumber
                - arrivalAirportCode: arrivalAirportCode
                  carrierCode: carrierCode
                  basicFareCode: basicFareCode
                  departureDate: departureDate
                  departureAirportCode: departureAirportCode
                  flightNumber: flightNumber
            type: merchantPurchaseData
          - lodging:
              - numberOfNights: 5
                checkInDate: checkInDate
              - numberOfNights: 5
                checkInDate: checkInDate
            airline:
              ticketNumber: ticketNumber
              legs:
                - arrivalAirportCode: arrivalAirportCode
                  carrierCode: carrierCode
                  basicFareCode: basicFareCode
                  departureDate: departureDate
                  departureAirportCode: departureAirportCode
                  flightNumber: flightNumber
                - arrivalAirportCode: arrivalAirportCode
                  carrierCode: carrierCode
                  basicFareCode: basicFareCode
                  departureDate: departureDate
                  departureAirportCode: departureAirportCode
                  flightNumber: flightNumber
            type: merchantPurchaseData
        mutations:
          - balance: 0
            reserved: 1
            currency: currency
            received: 6
          - balance: 0
            reserved: 1
            currency: currency
            received: 6
        originalAmount:
          currency: currency
          value: 0
        bookingDate: 2000-01-23T04:56:07.000+00:00
        id: id
        arn: arn
        amountAdjustments:
          - basepoints: 5
            amount:
              currency: currency
              value: 0
            amountAdjustmentType: atmMarkup
          - basepoints: 5
            amount:
              currency: currency
              value: 0
            amountAdjustmentType: atmMarkup
        estimatedArrivalTime: 2000-01-23T04:56:07.000+00:00
        status: approvalPending
      properties:
        amount:
          $ref: '#/components/schemas/Amount'
        amountAdjustments:
          description: "The amount adjustments in this transfer. Only applicable for\
            \ [issuing](https://docs.adyen.com/issuing/) integrations."
          items:
            $ref: '#/components/schemas/AmountAdjustment'
          type: array
          x-addedInVersion: "3"
        arn:
          description: "Scheme unique arn identifier useful for tracing captures,\
            \ chargebacks, refunds, etc."
          type: string
          x-addedInVersion: "4"
        bookingDate:
          description: The date when the transfer request was sent.
          format: date-time
          type: string
          x-addedInVersion: "3"
        estimatedArrivalTime:
          description: The estimated time when the beneficiary should have access
            to the funds.
          format: date-time
          type: string
          x-addedInVersion: "3"
        eventsData:
          description: A list of event data.
          items:
            $ref: '#/components/schemas/TransferEvent_eventsData_inner'
          type: array
          x-addedInVersion: "4"
        externalReason:
          $ref: '#/components/schemas/ExternalReason'
        id:
          description: The unique identifier of the transfer event.
          type: string
          x-addedInVersion: "3"
        modification:
          $ref: '#/components/schemas/Modification'
        mutations:
          description: The list of balance mutations per event.
          items:
            $ref: '#/components/schemas/BalanceMutation'
          type: array
          x-addedInVersion: "3"
        originalAmount:
          $ref: '#/components/schemas/Amount'
        reason:
          description: The reason for the transfer status.
          enum:
            - accountHierarchyNotActive
            - amountLimitExceeded
            - approved
            - balanceAccountTemporarilyBlockedByTransactionRule
            - counterpartyAccountBlocked
            - counterpartyAccountClosed
            - counterpartyAccountNotFound
            - counterpartyAddressRequired
            - counterpartyBankTimedOut
            - counterpartyBankUnavailable
            - declined
            - declinedByTransactionRule
            - directDebitNotSupported
            - error
            - notEnoughBalance
            - pending
            - pendingApproval
            - pendingExecution
            - refusedByCounterpartyBank
            - refusedByCustomer
            - routeNotFound
            - scaFailed
            - transferInstrumentDoesNotExist
            - unknown
          type: string
          x-addedInVersion: "3"
        status:
          description: The status of the transfer event.
          enum:
            - approvalPending
            - atmWithdrawal
            - atmWithdrawalReversalPending
            - atmWithdrawalReversed
            - authAdjustmentAuthorised
            - authAdjustmentError
            - authAdjustmentRefused
            - authorised
            - bankTransfer
            - bankTransferPending
            - booked
            - bookingPending
            - cancelled
            - capturePending
            - captureReversalPending
            - captureReversed
            - captured
            - capturedExternally
            - chargeback
            - chargebackExternally
            - chargebackPending
            - chargebackReversalPending
            - chargebackReversed
            - credited
            - depositCorrection
            - depositCorrectionPending
            - dispute
            - disputeClosed
            - disputeExpired
            - disputeNeedsReview
            - error
            - expired
            - failed
            - fee
            - feePending
            - internalTransfer
            - internalTransferPending
            - invoiceDeduction
            - invoiceDeductionPending
            - manualCorrectionPending
            - manuallyCorrected
            - matchedStatement
            - matchedStatementPending
            - merchantPayin
            - merchantPayinPending
            - merchantPayinReversed
            - merchantPayinReversedPending
            - miscCost
            - miscCostPending
            - paymentCost
            - paymentCostPending
            - pendingApproval
            - pendingExecution
            - received
            - refundPending
            - refundReversalPending
            - refundReversed
            - refunded
            - refundedExternally
            - refused
            - rejected
            - reserveAdjustment
            - reserveAdjustmentPending
            - returned
            - secondChargeback
            - secondChargebackPending
            - undefined
          type: string
          x-addedInVersion: "3"
        trackingData:
          $ref: '#/components/schemas/TransferEvent_trackingData'
        transactionId:
          description: The id of the transaction that is related to this accounting
            event. Only sent for events of type **accounting** where the balance changes.
          type: string
          x-addedInVersion: "3"
        type:
          description: "The type of the transfer event. Possible values: **accounting**,\
            \ **tracking**."
          enum:
            - accounting
            - tracking
          type: string
          x-addedInVersion: "3"
        updateDate:
          description: The date when the tracking status was updated.
          format: date-time
          type: string
          x-addedInVersion: "3"
        valueDate:
          description: The date when the funds are expected to be deducted from or
            credited to the balance account. This date can be in either the past or
            future.
          format: date-time
          type: string
          x-addedInVersion: "3"
    TransferInfo:
      additionalProperties: false
      example:
        amount:
          currency: currency
          value: 0
        description: description
        paymentInstrumentId: paymentInstrumentId
        priority: crossBorder
        type: bankTransfer
        balanceAccountId: balanceAccountId
        reference: reference
        priorities:
          - crossBorder
          - crossBorder
        referenceForBeneficiary: referenceForBeneficiary
        review:
          numberOfApprovalsRequired: 0
          scaOnApproval: true
        counterparty:
          balanceAccountId: balanceAccountId
          bankAccount:
            accountHolder:
              reference: reference
              firstName: firstName
              lastName: lastName
              address:
                country: country
                stateOrProvince: stateOrProvince
                city: city
                postalCode: postalCode
                line2: line2
                line1: line1
              fullName: fullName
              dateOfBirth: 2000-01-23
              type: unknown
            accountIdentification:
              bsbCode: bsbCode
              accountNumber: accountNumber
              type: auLocal
          transferInstrumentId: transferInstrumentId
          card:
            cardHolder:
              reference: reference
              firstName: firstName
              lastName: lastName
              address:
                country: country
                stateOrProvince: stateOrProvince
                city: city
                postalCode: postalCode
                line2: line2
                line1: line1
              fullName: fullName
              dateOfBirth: 2000-01-23
              type: unknown
            cardIdentification:
              number: number
              startMonth: startMonth
              issueNumber: issueNumber
              storedPaymentMethodId: storedPaymentMethodId
              expiryMonth: expiryMonth
              startYear: startYear
              expiryYear: expiryYear
        category: bank
        ultimateParty:
          reference: reference
          firstName: firstName
          lastName: lastName
          address:
            country: country
            stateOrProvince: stateOrProvince
            city: city
            postalCode: postalCode
            line2: line2
            line1: line1
          fullName: fullName
          dateOfBirth: 2000-01-23
          type: unknown
      properties:
        amount:
          $ref: '#/components/schemas/Amount'
        balanceAccountId:
          description: |-
            The unique identifier of the source [balance account](https://docs.adyen.com/api-explorer/balanceplatform/latest/post/balanceAccounts#responses-200-id).

            If you want to make a transfer using a **virtual** **bankAccount** assigned to the balance account, you must specify the [payment instrument ID](https://docs.adyen.com/api-explorer/balanceplatform/latest/post/paymentInstruments#responses-200-id) of the **virtual** **bankAccount**. If you only specify a balance account ID, Adyen uses the default **physical** **bankAccount** payment instrument assigned to the balance account.
          type: string
        category:
          description: |-
            The category of the transfer.

            Possible values:

             - **bank**: a transfer involving a [transfer instrument](https://docs.adyen.com/api-explorer/#/legalentity/latest/post/transferInstruments__resParam_id) or a bank account.

            - **card**: a transfer involving a third-party card.

            - **internal**: a transfer between [balance accounts](https://docs.adyen.com/api-explorer/#/balanceplatform/latest/post/balanceAccounts__resParam_id) within your platform.

            - **issuedCard**: a transfer initiated by a Adyen-issued card.

            - **platformPayment**: funds movements related to payments that are acquired for your users.

            - **topUp**: an incoming transfer initiated by your user to top up their balance account.
          enum:
            - bank
            - card
            - internal
            - issuedCard
            - platformPayment
            - topUp
          type: string
          x-addedInVersion: "3"
        counterparty:
          $ref: '#/components/schemas/CounterpartyInfoV3'
        description:
          description: |-
            Your description for the transfer. It is used by most banks as the transfer description. We recommend sending a maximum of 140 characters, otherwise the description may be truncated.

            Supported characters: **[a-z] [A-Z] [0-9] / - ?** **: ( ) . , ' + Space**

            Supported characters for **regular** and **fast** transfers to a US counterparty: **[a-z] [A-Z] [0-9] & $ % # @** **~ = + - _ ' " ! ?**
          maxLength: 140
          type: string
          x-addedInVersion: "1"
        paymentInstrumentId:
          description: |-
            The unique identifier of the source [payment instrument](https://docs.adyen.com/api-explorer/balanceplatform/latest/post/paymentInstruments#responses-200-id).

            If you want to make a transfer using a **virtual** **bankAccount**, you must specify the payment instrument ID of the **virtual** **bankAccount**. If you only specify a balance account ID, Adyen uses the default **physical** **bankAccount** payment instrument assigned to the balance account.
          type: string
        priorities:
          description: " The list of priorities for the bank transfer. This sets the\
            \ speed at which the transfer is sent and the fees that you have to pay.\
            \ You can provide multiple priorities. Adyen will try to pay out using\
            \ the priority you list first. If that's not possible, it moves on to\
            \ the next option in the order of your provided priorities. \n\nPossible\
            \ values:\n\n* **regular**: for normal, low-value transactions.\n\n* **fast**:\
            \ a faster way to transfer funds, but the fees are higher. Recommended\
            \ for high-priority, low-value transactions.\n\n* **wire**: the fastest\
            \ way to transfer funds, but this has the highest fees. Recommended for\
            \ high-priority, high-value transactions.\n\n* **instant**: for instant\
            \ funds transfers in [SEPA countries](https://www.ecb.europa.eu/paym/integration/retail/sepa/html/index.en.html).\n\
            \n* **crossBorder**: for high-value transfers to a recipient in a different\
            \ country.\n\n* **internal**: for transfers to an Adyen-issued business\
            \ bank account (by bank account number/IBAN).\n\nRequired for transfers\
            \ with `category` **bank**. For more details, see [fallback priorities](https://docs.adyen.com/payouts/payout-service/payout-to-users/#fallback-priorities)."
          items:
            enum:
              - crossBorder
              - fast
              - instant
              - internal
              - regular
              - wire
            type: string
          type: array
          x-addedInVersion: "4"
        priority:
          description: |-
            The priority for the bank transfer. This sets the speed at which the transfer is sent and the fees that you have to pay. Required for transfers with `category` **bank**.

            Possible values:

            * **regular**: for normal, low-value transactions.

            * **fast**: a faster way to transfer funds, but the fees are higher. Recommended for high-priority, low-value transactions.

            * **wire**: the fastest way to transfer funds, but this has the highest fees. Recommended for high-priority, high-value transactions.

            * **instant**: for instant funds transfers in [SEPA countries](https://www.ecb.europa.eu/paym/integration/retail/sepa/html/index.en.html).

            * **crossBorder**: for high-value transfers to a recipient in a different country.

            * **internal**: for transfers to an Adyen-issued business bank account (by bank account number/IBAN).
          enum:
            - crossBorder
            - fast
            - instant
            - internal
            - regular
            - wire
          type: string
          x-addedInVersion: "3"
        reference:
          description: "Your reference for the transfer, used internally within your\
            \ platform. If you don't provide this in the request, Adyen generates\
            \ a unique reference."
          maxLength: 80
          type: string
          x-addedInVersion: "2"
        referenceForBeneficiary:
          description: |2-
             A reference that is sent to the recipient. This reference is also sent in all webhooks related to the transfer, so you can use it to track statuses for both parties involved in the funds movement.

             Supported characters: **a-z**, **A-Z**, **0-9**. The maximum length depends on the `category`.

            - **internal**: 80 characters

            - **bank**: 35 characters when transferring to an IBAN, 15 characters for others.
          type: string
          x-addedInVersion: "2"
        review:
          $ref: '#/components/schemas/TransferRequestReview'
        type:
          description: "The type of transfer.\n\nPossible values:\n\n - **bankTransfer**:\
            \ for push transfers to a transfer instrument or a bank account. The `category`\
            \ must be **bank**.\n- **internalTransfer**: for push transfers between\
            \ balance accounts. The `category` must be **internal**.\n- **internalDirectDebit**:\
            \ for pull transfers (direct debits) between balance accounts. The `category`\
            \ must be **internal**. \n\n"
          enum:
            - bankTransfer
            - internalTransfer
            - internalDirectDebit
          type: string
          x-addedInVersion: "3"
        ultimateParty:
          $ref: '#/components/schemas/UltimatePartyIdentification'
      required:
        - amount
        - category
        - counterparty
    TransferNotificationCounterParty:
      additionalProperties: false
      example:
        balanceAccountId: balanceAccountId
        bankAccount:
          accountHolder:
            reference: reference
            firstName: firstName
            lastName: lastName
            address:
              country: country
              stateOrProvince: stateOrProvince
              city: city
              postalCode: postalCode
              line2: line2
              line1: line1
            fullName: fullName
            dateOfBirth: 2000-01-23
            type: unknown
          accountIdentification:
            bsbCode: bsbCode
            accountNumber: accountNumber
            type: auLocal
        merchant:
          country: country
          city: city
          merchantId: merchantId
          postalCode: postalCode
          name: name
          acquirerId: acquirerId
          mcc: mcc
        transferInstrumentId: transferInstrumentId
        card:
          cardHolder:
            reference: reference
            firstName: firstName
            lastName: lastName
            address:
              country: country
              stateOrProvince: stateOrProvince
              city: city
              postalCode: postalCode
              line2: line2
              line1: line1
            fullName: fullName
            dateOfBirth: 2000-01-23
            type: unknown
          cardIdentification:
            number: number
            startMonth: startMonth
            issueNumber: issueNumber
            storedPaymentMethodId: storedPaymentMethodId
            expiryMonth: expiryMonth
            startYear: startYear
            expiryYear: expiryYear
      properties:
        balanceAccountId:
          description: "The unique identifier of the counterparty [balance account](https://docs.adyen.com/api-explorer/balanceplatform/latest/post/balanceAccounts#responses-200-id)."
          type: string
        bankAccount:
          $ref: '#/components/schemas/BankAccountV3'
        card:
          $ref: '#/components/schemas/Card'
        merchant:
          $ref: '#/components/schemas/TransferNotificationMerchantData'
        transferInstrumentId:
          description: "The unique identifier of the counterparty [transfer instrument](https://docs.adyen.com/api-explorer/legalentity/latest/post/transferInstruments#responses-200-id)."
          type: string
    TransferNotificationMerchantData:
      additionalProperties: false
      example:
        country: country
        city: city
        merchantId: merchantId
        postalCode: postalCode
        name: name
        acquirerId: acquirerId
        mcc: mcc
      properties:
        acquirerId:
          description: The unique identifier of the merchant's acquirer.
          type: string
        city:
          description: The city where the merchant is located.
          type: string
        country:
          description: The country where the merchant is located.
          type: string
        mcc:
          description: The merchant category code.
          type: string
        merchantId:
          description: The unique identifier of the merchant.
          type: string
        name:
          description: The name of the merchant's shop or service.
          type: string
        postalCode:
          description: The postal code of the merchant.
          type: string
    TransferNotificationValidationFact:
      additionalProperties: false
      properties:
        result:
          description: The evaluation result of the validation fact.
          type: string
        type:
          description: The type of the validation fact.
          type: string
    TransferRequestReview:
      additionalProperties: false
      example:
        numberOfApprovalsRequired: 0
        scaOnApproval: true
      properties:
        numberOfApprovalsRequired:
          description: "Specifies the number of [approvals](https://docs.adyen.com/api-explorer/transfers/latest/post/transfers/approve)\
            \ required to process the transfer."
          format: int32
          type: integer
        scaOnApproval:
          description: |-
            Specifies whether you will initiate Strong Customer Authentication (SCA) in thePOST [/transfers/approve](https://docs.adyen.com/api-explorer/transfers/latest/post/transfers/approve) request.

            Only applies to transfers made with an Adyen [business account](https://docs.adyen.com/platforms/business-accounts).
          type: boolean
    TransferReview:
      additionalProperties: false
      example:
        numberOfApprovalsRequired: 2
        scaOnApproval: completed
      properties:
        numberOfApprovalsRequired:
          description: "Shows the number of [approvals](https://docs.adyen.com/api-explorer/transfers/latest/post/transfers/approve)\
            \ required to process the transfer."
          format: int32
          type: integer
        scaOnApproval:
          description: |-
            Shows the status of the Strong Customer Authentication (SCA) process.

            Possible values: **required**, **notApplicable**.
          enum:
            - completed
            - notApplicable
            - required
          type: string
    TransferServiceRestServiceError:
      additionalProperties: false
      example:
        instance: instance
        invalidFields:
          - name: name
            message: message
            value: value
          - name: name
            message: message
            value: value
        requestId: requestId
        response: "{}"
        errorCode: errorCode
        routingDetails:
          - errorCode: errorCode
            detail: detail
            priority: crossBorder
            title: title
          - errorCode: errorCode
            detail: detail
            priority: crossBorder
            title: title
        detail: detail
        title: title
        type: type
        status: 2
      properties:
        detail:
          description: A human-readable explanation specific to this occurrence of
            the problem.
          type: string
        errorCode:
          description: A code that identifies the problem type.
          type: string
        instance:
          description: A unique URI that identifies the specific occurrence of the
            problem.
          type: string
        invalidFields:
          description: "Detailed explanation of each validation error, when applicable."
          items:
            $ref: '#/components/schemas/InvalidField'
          type: array
        requestId:
          description: "A unique reference for the request, essentially the same as\
            \ `pspReference`."
          type: string
        response:
          type: object
        routingDetails:
          description: Detailed explanation of each attempt to route the transfer
            with the priorities from the request.
          items:
            $ref: '#/components/schemas/RoutingDetails'
          type: array
        status:
          description: The HTTP status code.
          format: int32
          type: integer
        title:
          description: "A short, human-readable summary of the problem type."
          type: string
        type:
          description: "A URI that identifies the problem type, pointing to human-readable\
            \ documentation on this problem type."
          type: string
      required:
        - detail
        - errorCode
        - status
        - title
        - type
    TransferView:
      additionalProperties: false
      example:
        reference: reference
        categoryData:
          priority: crossBorder
          type: bank
        id: id
      properties:
        categoryData:
          $ref: '#/components/schemas/Transfer_categoryData'
        id:
          description: The ID of the resource.
          type: string
        reference:
          description: "The [`reference`](https://docs.adyen.com/api-explorer/#/transfers/latest/post/transfers__reqParam_reference)\
            \ from the `/transfers` request. If you haven't provided any, Adyen generates\
            \ a unique reference."
          type: string
          x-addedInVersion: "4"
      required:
        - reference
    UKLocalAccountIdentification:
      additionalProperties: false
      properties:
        accountNumber:
          description: "The 8-digit bank account number, without separators or whitespace."
          maxLength: 8
          minLength: 8
          type: string
        sortCode:
          description: "The 6-digit [sort code](https://en.wikipedia.org/wiki/Sort_code),\
            \ without separators or whitespace."
          maxLength: 6
          minLength: 6
          type: string
        type:
          default: ukLocal
          description: '**ukLocal**'
          enum:
            - ukLocal
          type: string
      required:
        - accountNumber
        - sortCode
        - type
    USLocalAccountIdentification:
      additionalProperties: false
      properties:
        accountNumber:
          description: "The bank account number, without separators or whitespace."
          maxLength: 18
          minLength: 2
          type: string
        accountType:
          default: checking
          description: |-
            The bank account type.

            Possible values: **checking** or **savings**. Defaults to **checking**.
          enum:
            - checking
            - savings
          type: string
        routingNumber:
          description: "The 9-digit [routing number](https://en.wikipedia.org/wiki/ABA_routing_transit_number),\
            \ without separators or whitespace."
          maxLength: 9
          minLength: 9
          type: string
        type:
          default: usLocal
          description: '**usLocal**'
          enum:
            - usLocal
          type: string
      required:
        - accountNumber
        - routingNumber
        - type
    UltimatePartyIdentification:
      additionalProperties: false
      example:
        reference: reference
        firstName: firstName
        lastName: lastName
        address:
          country: country
          stateOrProvince: stateOrProvince
          city: city
          postalCode: postalCode
          line2: line2
          line1: line1
        fullName: fullName
        dateOfBirth: 2000-01-23
        type: unknown
      properties:
        address:
          $ref: '#/components/schemas/Address'
        dateOfBirth:
          description: |-
            The date of birth of the individual in [ISO-8601](https://www.w3.org/TR/NOTE-datetime) format. For example, **YYYY-MM-DD**.

            Allowed only when `type` is **individual**.
          format: date
          type: string
        firstName:
          description: |-
            The first name of the individual.

            Supported characters: [a-z] [A-Z] - . / — and space.

            This parameter is:
            - Allowed only when `type` is **individual**.
            - Required when `category` is **card**.
          type: string
        fullName:
          description: |-
            The full name of the entity that owns the bank account or card.

            Supported characters: [a-z] [A-Z] [0-9] , . ; : - — / \ + & ! ? @ ( ) " ' and space.

            Required when `category` is **bank**.
          type: string
        lastName:
          description: |-
            The last name of the individual.

            Supported characters: [a-z] [A-Z] - . / — and space.

            This parameter is:
            - Allowed only when `type` is **individual**.
            - Required when `category` is **card**.
          type: string
        reference:
          description: |-
            A unique reference to identify the party or counterparty involved in the transfer. For example, your client's unique wallet or payee ID.

            Required when you include `cardIdentification.storedPaymentMethodId`.
          maxLength: 150
          type: string
        type:
          default: unknown
          description: |-
            The type of entity that owns the bank account or card.

            Possible values: **individual**, **organization**, or **unknown**.

            Required when `category` is **card**. In this case, the value must be **individual**.
          enum:
            - individual
            - organization
            - unknown
          type: string
    BankAccountV3_accountIdentification:
      description: Contains the bank account details. The fields required in this
        object depend on the country of the bank account and the currency of the transfer.
      oneOf:
        - $ref: '#/components/schemas/AULocalAccountIdentification'
        - $ref: '#/components/schemas/BRLocalAccountIdentification'
        - $ref: '#/components/schemas/CALocalAccountIdentification'
        - $ref: '#/components/schemas/CZLocalAccountIdentification'
        - $ref: '#/components/schemas/DKLocalAccountIdentification'
        - $ref: '#/components/schemas/HKLocalAccountIdentification'
        - $ref: '#/components/schemas/HULocalAccountIdentification'
        - $ref: '#/components/schemas/IbanAccountIdentification'
        - $ref: '#/components/schemas/NOLocalAccountIdentification'
        - $ref: '#/components/schemas/NZLocalAccountIdentification'
        - $ref: '#/components/schemas/NumberAndBicAccountIdentification'
        - $ref: '#/components/schemas/PLLocalAccountIdentification'
        - $ref: '#/components/schemas/SELocalAccountIdentification'
        - $ref: '#/components/schemas/SGLocalAccountIdentification'
        - $ref: '#/components/schemas/UKLocalAccountIdentification'
        - $ref: '#/components/schemas/USLocalAccountIdentification'
    Transfer_categoryData:
      description: The relevant data according to the transfer category.
      oneOf:
        - $ref: '#/components/schemas/BankCategoryData'
        - $ref: '#/components/schemas/InternalCategoryData'
        - $ref: '#/components/schemas/IssuedCard'
        - $ref: '#/components/schemas/PlatformPayment'
      x-addedInVersion: "4"
    TransferData_tracking:
      description: The latest tracking information of the transfer.
      oneOf:
        - $ref: '#/components/schemas/ConfirmationTrackingData'
        - $ref: '#/components/schemas/EstimationTrackingData'
        - $ref: '#/components/schemas/InternalReviewTrackingData'
      x-addedInVersion: "3"
    TransferEvent_eventsData_inner:
      oneOf:
        - $ref: '#/components/schemas/MerchantPurchaseData'
    TransferEvent_trackingData:
      description: Additional information for the tracking event.
      oneOf:
        - $ref: '#/components/schemas/ConfirmationTrackingData'
        - $ref: '#/components/schemas/EstimationTrackingData'
        - $ref: '#/components/schemas/InternalReviewTrackingData'
      x-addedInVersion: "3"
  securitySchemes:
    ApiKeyAuth:
      in: header
      name: X-API-Key
      type: apiKey
    BasicAuth:
      scheme: basic
      type: http
    clientKey:
      in: query
      name: clientKey
      type: apiKey
